["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.printing');\ndevtools.formatters.printing.markup_QMARK_ = (function devtools$formatters$printing$markup_QMARK_(value){\nreturn new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(value));\n});\ndevtools.formatters.printing.mark_as_markup = (function devtools$formatters$printing$mark_as_markup(value){\nreturn cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186),true], null));\n});\ndevtools.formatters.printing.build_markup = (function devtools$formatters$printing$build_markup(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31041 = arguments.length;\nvar i__4737__auto___31042 = (0);\nwhile(true){\nif((i__4737__auto___31042 < len__4736__auto___31041)){\nargs__4742__auto__.push((arguments[i__4737__auto___31042]));\n\nvar G__31043 = (i__4737__auto___31042 + (1));\ni__4737__auto___31042 = G__31043;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic = (function (markup_db,fn_key,args){\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(markup_db,fn_key);\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"missing markup method in markup-db: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_key)].join(''),\"\\n\",\"f\"].join('')));\n}\n\nreturn devtools.formatters.printing.mark_as_markup(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args));\n}));\n\n(devtools.formatters.printing.build_markup.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.printing.build_markup.cljs$lang$applyTo = (function (seq30893){\nvar G__30894 = cljs.core.first(seq30893);\nvar seq30893__$1 = cljs.core.next(seq30893);\nvar G__30895 = cljs.core.first(seq30893__$1);\nvar seq30893__$2 = cljs.core.next(seq30893__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30894,G__30895,seq30893__$2);\n}));\n\ndevtools.formatters.printing.wrap_value_as_reference_if_needed = (function devtools$formatters$printing$wrap_value_as_reference_if_needed(markup_db,value){\nif(cljs.core.truth_((function (){var or__4126__auto__ = devtools.formatters.helpers.directly_printable_QMARK_(value);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nreturn devtools.formatters.printing.markup_QMARK_(value);\n}\n})())){\nreturn value;\n} else {\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0));\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n*/\ndevtools.formatters.printing.TemplateWriter = (function (group,markup_db){\nthis.group = group;\nthis.markup_db = markup_db;\nthis.cljs$lang$protocol_mask$partition0$ = 1073741824;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(devtools.formatters.printing.TemplateWriter.prototype.merge = (function (a){\nvar self__ = this;\nvar _ = this;\nreturn (self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,a));\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.get_group = (function (){\nvar self__ = this;\nvar _ = this;\nreturn self__.group;\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,o){\nvar self__ = this;\nvar ___$1 = this;\nreturn (self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.wrap_value_as_reference_if_needed(self__.markup_db,o)], null)));\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn null;\n}));\n\n(devtools.formatters.printing.TemplateWriter.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"group\",\"group\",-2071839637,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"markup-db\",\"markup-db\",-1841597035,null)], null);\n}));\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$type = true);\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$ctorStr = \"devtools.formatters.printing/TemplateWriter\");\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"devtools.formatters.printing/TemplateWriter\");\n}));\n\n/**\n * Positional factory function for devtools.formatters.printing/TemplateWriter.\n */\ndevtools.formatters.printing.__GT_TemplateWriter = (function devtools$formatters$printing$__GT_TemplateWriter(group,markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(group,markup_db));\n});\n\ndevtools.formatters.printing.make_template_writer = (function devtools$formatters$printing$make_template_writer(markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(cljs.core.PersistentVector.EMPTY,markup_db));\n});\ndevtools.formatters.printing.already_reference_QMARK_ = (function devtools$formatters$printing$already_reference_QMARK_(group){\nvar temp__5733__auto__ = cljs.core.first(cljs.core.first(group));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar tag = temp__5733__auto__;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag,\"reference\");\n} else {\nreturn null;\n}\n});\ndevtools.formatters.printing.wrap_group_in_reference_if_needed = (function devtools$formatters$printing$wrap_group_in_reference_if_needed(group,obj,markup_db){\nif(cljs.core.truth_(((cljs.core.not(devtools.formatters.printing.already_reference_QMARK_(group)))?(function (){var or__4126__auto__ = devtools.formatters.helpers.expandable_QMARK_(obj);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn devtools.formatters.helpers.abbreviated_QMARK_(group);\n}\n})():false))){\nvar expandable_markup = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),group);\nvar surrogate_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,expandable_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0));\nvar reference_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([surrogate_markup], 0));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reference_markup], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_circular_warning_if_needed = (function devtools$formatters$printing$wrap_group_in_circular_warning_if_needed(group,markup_db,circular_QMARK_){\nif(cljs.core.truth_(circular_QMARK_)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_meta_if_needed = (function devtools$formatters$printing$wrap_group_in_meta_if_needed(group,value,markup_db){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-metas\",\"render-metas\",1141294116),value,(function (p1__30983_SHARP_){\nreturn (!((cljs.core.meta(p1__30983_SHARP_) == null)));\n})))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587).cljs$core$IFn$_invoke$arity$1(markup_db),cljs.core.meta(value)),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.detect_edge_case_and_patch_it = (function devtools$formatters$printing$detect_edge_case_and_patch_it(group,obj,markup_db){\nif(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"\\\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\"]\")))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null);\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#<\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(1)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\">\")))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),devtools.formatters.printing.build_markup(new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2))], null);\n} else {\nreturn group;\n\n}\n}\n});\ndevtools.formatters.printing.post_process_printed_output = (function devtools$formatters$printing$post_process_printed_output(output_group,obj,markup_db,circular_QMARK_){\nreturn devtools.formatters.printing.wrap_group_in_meta_if_needed(devtools.formatters.printing.wrap_group_in_circular_warning_if_needed(devtools.formatters.printing.wrap_group_in_reference_if_needed(devtools.formatters.printing.detect_edge_case_and_patch_it(output_group,obj,markup_db),obj,markup_db),markup_db,circular_QMARK_),obj,markup_db);\n});\ndevtools.formatters.printing.alt_printer_job = (function devtools$formatters$printing$alt_printer_job(obj,writer,opts){\nvar map__31016 = opts;\nvar map__31016__$1 = (((((!((map__31016 == null))))?(((((map__31016.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31016.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31016):map__31016);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31016__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nif(cljs.core.truth_((function (){var or__4126__auto__ = (function (){try{if((!((obj == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n}\n}catch (e31020){var _e__28608__auto__ = e31020;\nreturn false;\n}})();\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\ntry{if((!((obj == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n}\n}catch (e31022){var _e__28608__auto__ = e31022;\nreturn false;\n}}\n})())){\nreturn cljs.core._write(writer,devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\n} else {\nvar temp__5733__auto__ = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar atomic_markup = temp__5733__auto__;\nreturn cljs.core._write(writer,atomic_markup);\n} else {\nvar default_impl = new cljs.core.Keyword(null,\"fallback-impl\",\"fallback-impl\",-1501286995).cljs$core$IFn$_invoke$arity$1(opts);\nvar inner_opts = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_print_level_STAR_,(1)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),(0)):opts);\nreturn (default_impl.cljs$core$IFn$_invoke$arity$3 ? default_impl.cljs$core$IFn$_invoke$arity$3(obj,writer,inner_opts) : default_impl.call(null,obj,writer,inner_opts));\n}\n}\n});\ndevtools.formatters.printing.alt_printer_impl = (function devtools$formatters$printing$alt_printer_impl(obj,writer,opts){\nvar _STAR_current_state_STAR__orig_val__31024 = devtools.formatters.state._STAR_current_state_STAR_;\nvar _STAR_current_state_STAR__temp_val__31025 = devtools.formatters.state.get_current_state();\n(devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__temp_val__31025);\n\ntry{var map__31026 = opts;\nvar map__31026__$1 = (((((!((map__31026 == null))))?(((((map__31026.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31026.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31026):map__31026);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31026__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nvar circular_QMARK_ = devtools.formatters.state.is_circular_QMARK_(obj);\nvar inner_writer = devtools.formatters.printing.make_template_writer(new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734).cljs$core$IFn$_invoke$arity$1(opts));\ndevtools.formatters.state.push_object_to_current_history_BANG_(obj);\n\ndevtools.formatters.printing.alt_printer_job(obj,inner_writer,opts);\n\nreturn writer.merge(devtools.formatters.printing.post_process_printed_output(inner_writer.get_group(),obj,markup_db,circular_QMARK_));\n}finally {(devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__orig_val__31024);\n}});\ndevtools.formatters.printing.managed_print = (function devtools$formatters$printing$managed_print(tag,markup_db,printer){\nvar writer = devtools.formatters.printing.make_template_writer(markup_db);\nvar opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"alt-impl\",\"alt-impl\",670969595),devtools.formatters.printing.alt_printer_impl,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734),markup_db,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),devtools.prefs.pref(new cljs.core.Keyword(null,\"max-header-elements\",\"max-header-elements\",713629864)),new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935),devtools.prefs.pref(new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935))], null);\nvar job_fn = (function (){\nreturn (printer.cljs$core$IFn$_invoke$arity$2 ? printer.cljs$core$IFn$_invoke$arity$2(writer,opts) : printer.call(null,writer,opts));\n});\nvar temp__5733__auto___31084 = devtools.formatters.state.get_managed_print_level();\nif(cljs.core.truth_(temp__5733__auto___31084)){\nvar managed_print_level_31085 = temp__5733__auto___31084;\nvar _STAR_print_level_STAR__orig_val__31033_31086 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__31034_31087 = managed_print_level_31085;\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__31034_31087);\n\ntry{devtools.formatters.state.update_current_state_BANG_((function (p1__31029_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__31029_SHARP_,null);\n}));\n\njob_fn();\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__31033_31086);\n}} else {\njob_fn();\n}\n\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.prefs.pref(tag)], null),writer.get_group());\n});\ndevtools.formatters.printing.managed_print_via_writer = (function devtools$formatters$printing$managed_print_via_writer(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core.pr_seq_writer(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null),writer,opts);\n}));\n});\ndevtools.formatters.printing.managed_print_via_protocol = (function devtools$formatters$printing$managed_print_via_protocol(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core._pr_writer(value,writer,opts);\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/printing.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",33],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$safe-call","~$devtools.oops"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.printing","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.prefs","^S","~$devtools.format","^T","~$devtools.protocols","^U","~$devtools.formatters.state","^V","~$devtools.formatters.helpers","^W","~$cljs.core","^X","~$goog","^Y"],"~:seen",["^L",["~:require","~:require-macros"]],"~:uses",["^ ","~$IGroup","^U","~$expandable?","^W","~$ITemplate","^U","~$IDevtoolsFormat","^T","~$get-managed-print-level","^V","~$get-current-state","^V","~$ISurrogate","^U","~$should-render?","^W","~$set-managed-print-level","^V","~$directly-printable?","^W","~$pref","^S","~$push-object-to-current-history!","^V","~$update-current-state!","^V","~$abbreviated?","^W","~$IFormat","^U","~$*current-state*","^V","~$cljs-value?","^W","~$is-circular?","^V"],"^10",["^ ","^J","^J","^X","^X","^S","^S"],"~:form",["~#list",["~$ns","^N",["^1E",["^10",["^J","~:refer",["^I"]]]],["^1E",["^[",["^S","^1G",["^1<"]],["^T","^1G",["^15"]],["^U","^1G",["^14","^12","^18","^1@"]],["^V","^1G",["^1=","^1A","^17","^1C","^16","^1:","^1>"]],["^W","^1G",["^1B","^13","^1?","^1;","^19"]]]]]],"~:flags",["^ ","^10",["^L",[]],"^[",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^X","^S","^T","^U","^V","^W"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/printing.cljs"],"~:compiled-at",1611325007276,"~:resource-name","devtools/formatters/printing.cljs","~:warnings",[],"~:source","(ns devtools.formatters.printing\n  (:require-macros [devtools.oops :refer [safe-call]])\n  (:require [devtools.prefs :refer [pref]]\n            [devtools.format :refer [IDevtoolsFormat]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.state :refer [push-object-to-current-history! *current-state* get-current-state\n                                               is-circular? get-managed-print-level set-managed-print-level\n                                               update-current-state!]]\n            [devtools.formatters.helpers :refer [cljs-value? expandable? abbreviated? directly-printable? should-render?]]))\n\n; -- helpers ----------------------------------------------------------------------------------------------------------------\n\n(defn markup? [value]\n  (::markup (meta value)))\n\n(defn mark-as-markup [value]\n  (with-meta value {::markup true}))\n\n(defn build-markup [markup-db fn-key & args]\n  (let [f (get markup-db fn-key)]\n    (assert f (str \"missing markup method in markup-db: \" fn-key))\n    (mark-as-markup (apply f args))))\n\n(defn wrap-value-as-reference-if-needed [markup-db value]\n  (if (or (directly-printable? value) (markup? value))\n    value\n    (build-markup markup-db :reference-surrogate value)))\n\n; -- TemplateWriter ---------------------------------------------------------------------------------------------------------\n\n(deftype TemplateWriter [^:mutable group markup-db]\n  Object\n  (merge [_ a] (set! group (concat group a)))\n  (get-group [_] group)\n  IWriter\n  (-write [_ o] (set! group (concat group [(wrap-value-as-reference-if-needed markup-db o)])))                                ; issue #21\n  (-flush [_] nil))\n\n(defn make-template-writer [markup-db]\n  (TemplateWriter. [] markup-db))\n\n; -- post-processing --------------------------------------------------------------------------------------------------------\n\n(defn already-reference? [group]\n  (if-let [tag (first (first group))]\n    (= tag \"reference\")))\n\n(defn wrap-group-in-reference-if-needed [group obj markup-db]\n  (if (and (not (already-reference? group))\n           (or (expandable? obj) (abbreviated? group)))\n    (let [expandable-markup (apply build-markup markup-db :expandable group)\n          surrogate-markup (build-markup markup-db :raw-surrogate obj expandable-markup :target)\n          reference-markup (build-markup markup-db :reference surrogate-markup)]\n      [reference-markup])\n    group))\n\n(defn wrap-group-in-circular-warning-if-needed [group markup-db circular?]\n  (if circular?\n    [(apply build-markup markup-db :circular-reference group)]\n    group))\n\n(defn wrap-group-in-meta-if-needed [group value markup-db]\n  (if (should-render? :render-metas value #(some? (meta %)))\n    [(apply (partial (:meta-wrapper markup-db) (meta value)) group)]\n    group))\n\n; default printer implementation can do this:\n;   :else (write-all writer \"#<\" (str obj) \">\")\n; we want to wrap stringified obj in a reference for further inspection\n;\n; this behaviour changed in https://github.com/clojure/clojurescript/commit/34c3b8985ed8197d90f441c46d168c4024a20eb8\n; newly functions and :else branch print \"#object [\" ... \"]\"\n;\n; in some situations obj can still be a clojurescript value (e.g. deftypes)\n; we have to implement a special flag to prevent infinite recursion\n; see https://github.com/binaryage/cljs-devtools/issues/2\n;     https://github.com/binaryage/cljs-devtools/issues/8\n(defn detect-edge-case-and-patch-it [group obj markup-db]\n  (cond\n    (or\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"\\\"]\"))                                          ; function case\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"]\"))                                            ; :else -constructor case\n      (and (= (count group) 3) (= (nth group 0) \"#object[\") (= (nth group 2) \"]\")))                                           ; :else -cljs$lang$ctorStr case\n    [(build-markup markup-db :native-reference obj)]\n\n    (and (= (count group) 3) (= (nth group 0) \"#<\") (= (str obj) (nth group 1)) (= (nth group 2) \">\"))                        ; old code prior r1.7.28\n    [(nth group 0) (build-markup :native-reference obj) (nth group 2)]\n\n    :else group))\n\n(defn post-process-printed-output [output-group obj markup-db circular?]\n  (-> output-group\n      (detect-edge-case-and-patch-it obj markup-db)                                                                           ; an ugly hack\n      (wrap-group-in-reference-if-needed obj markup-db)\n      (wrap-group-in-circular-warning-if-needed markup-db circular?)\n      (wrap-group-in-meta-if-needed obj markup-db)))\n\n; -- alternative printer ----------------------------------------------------------------------------------------------------\n\n(defn alt-printer-job [obj writer opts]\n  (let [{:keys [markup-db]} opts]\n    (if (or (safe-call satisfies? false IDevtoolsFormat obj)\n            (safe-call satisfies? false IFormat obj))                                                                         ; we have to wrap value in reference if detected IFormat\n      (-write writer (build-markup markup-db :reference obj))\n      (if-let [atomic-markup (build-markup markup-db :atomic obj)]\n        (-write writer atomic-markup)\n        (let [default-impl (:fallback-impl opts)\n              ; we want to limit print-level, at max-print-level level use maximal abbreviation e.g. [...] or {...}\n              inner-opts (if (= *print-level* 1) (assoc opts :print-length 0) opts)]\n          (default-impl obj writer inner-opts))))))\n\n(defn alt-printer-impl [obj writer opts]\n  (binding [*current-state* (get-current-state)]\n    (let [{:keys [markup-db]} opts\n          circular? (is-circular? obj)\n          inner-writer (make-template-writer (:markup-db opts))]\n      (push-object-to-current-history! obj)\n      (alt-printer-job obj inner-writer opts)\n      (.merge writer (post-process-printed-output (.get-group inner-writer) obj markup-db circular?)))))\n\n; -- common code for managed printing ---------------------------------------------------------------------------------------\n\n(defn managed-print [tag markup-db printer]\n  (let [writer (make-template-writer markup-db)\n        opts {:alt-impl     alt-printer-impl\n              :markup-db    markup-db\n              :print-length (pref :max-header-elements)\n              :more-marker  (pref :more-marker)}\n        job-fn #(printer writer opts)]\n    (if-let [managed-print-level (get-managed-print-level)]\n      (binding [*print-level* managed-print-level]\n        (update-current-state! #(set-managed-print-level % nil))                                                              ; reset managed-print-level so it does not propagate further down in expaded data\n        (job-fn))\n      (job-fn))\n    (concat [(pref tag)] (.get-group writer))))\n\n; -- public printing API ----------------------------------------------------------------------------------------------------\n\n(defn managed-print-via-writer [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (pr-seq-writer [value] writer opts))))                                                       ; note we use pr-seq-writer becasue pr-writer is private for some reason\n\n(defn managed-print-via-protocol [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (-pr-writer value writer opts))))\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["devtools.formatters.printing/markup?","value","cljs.core/meta","devtools.formatters.printing/mark-as-markup","cljs.core/with-meta","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","devtools.formatters.printing/build-markup","seq30893","G__30894","cljs.core/first","cljs.core/next","G__30895","self__4723__auto__","markup-db","fn-key","args","f","cljs.core.get","js/Error","cljs.core.apply","devtools.formatters.printing/wrap-value-as-reference-if-needed","or__4126__auto__","devtools.formatters.helpers/directly-printable?","devtools.formatters.printing.build_markup","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","devtools.formatters.printing/TemplateWriter","devtools.formatters.printing/->TemplateWriter","group","_","a","cljs.core.concat","o","devtools.formatters.printing/make-template-writer","devtools.formatters.printing/already-reference?","temp__5733__auto__","tag","cljs.core._EQ_","devtools.formatters.printing/wrap-group-in-reference-if-needed","obj","cljs.core/not","devtools.formatters.helpers/expandable?","devtools.formatters.helpers/abbreviated?","expandable-markup","surrogate-markup","reference-markup","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","circular?","devtools.formatters.printing/wrap-group-in-meta-if-needed","p1__30983#","devtools.formatters.helpers/should-render?","cljs.core.partial","devtools.formatters.printing/detect-edge-case-and-patch-it","cljs.core/count","cljs.core.nth","devtools.formatters.printing/post-process-printed-output","output-group","devtools.formatters.printing/alt-printer-job","writer","opts","map__31016","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core/native-satisfies?","_e__28608__auto__","e31020","devtools.format/IDevtoolsFormat","e31022","devtools.protocols/IFormat","atomic-markup","default-impl","inner-opts","cljs.core/*print-level*","cljs.core.assoc","devtools.formatters.printing/alt-printer-impl","*current-state*-orig-val__31024","*current-state*-temp-val__31025","devtools.formatters.state/*current-state*","devtools.formatters.state/get-current-state","map__31026","devtools.formatters.state/is-circular?","inner-writer","devtools.formatters.state/push-object-to-current-history!","devtools.formatters.printing/managed-print","printer","devtools.prefs/pref","job-fn","managed-print-level","devtools.formatters.state/get-managed-print-level","*print-level*-orig-val__31033","*print-level*-temp-val__31034","p1__31029#","devtools.formatters.state/update-current-state!","devtools.formatters.state/set-managed-print-level","devtools.formatters.printing/managed-print-via-writer","cljs.core/pr-seq-writer","devtools.formatters.printing/managed-print-via-protocol","cljs.core/-pr-writer"]],"~:used-vars",["^L",["~$devtools.formatters.printing/managed-print-via-protocol","~$cljs.core/PROTOCOL_SENTINEL","~$devtools.protocols/IFormat","~$cljs.core/*print-level*","~$devtools.formatters.printing/make-template-writer","~$cljs.core/=","~$devtools.formatters.printing/already-reference?","~$devtools.formatters.printing/managed-print-via-writer","~$cljs.core/partial","~$cljs.core/-write","~$devtools.formatters.printing/alt-printer-job","~$cljs.core/count","~$devtools.formatters.printing/wrap-group-in-reference-if-needed","~$devtools.formatters.printing/managed-print","~$cljs.core/pr-seq-writer","~$cljs.core/apply","~$devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","~$devtools.formatters.printing/post-process-printed-output","~$devtools.formatters.printing/mark-as-markup","~$devtools.formatters.printing/build-markup","~$devtools.formatters.printing/detect-edge-case-and-patch-it","~$cljs.core/concat","~$cljs.core/native-satisfies?","~$devtools.formatters.state/update-current-state!","~$devtools.formatters.helpers/abbreviated?","~$cljs.core/with-meta","~$devtools.formatters.printing/wrap-group-in-meta-if-needed","~$devtools.formatters.printing/markup?","~$devtools.formatters.state/push-object-to-current-history!","~$devtools.formatters.printing/wrap-value-as-reference-if-needed","~$devtools.prefs/pref","~$cljs.core/-pr-writer","~$cljs.core/nth","~$cljs.core/meta","~$devtools.formatters.printing/alt-printer-impl","~$cljs.core/not","~$devtools.formatters.state/*current-state*","~$devtools.formatters.printing/TemplateWriter","~$devtools.formatters.state/set-managed-print-level","~$devtools.formatters.printing/->TemplateWriter","~$js/Error","~$devtools.formatters.helpers/should-render?"]]],"~:cache-keys",["~#cmap",[["^1L","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["^Y","~$goog.dom.HtmlElement"]]],["^1L","devtools/formatters/printing.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^X","^S","^T","^U","^V","^W"]]],["^1L","devtools/formatters/helpers.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^X","^S","~$devtools.munging","^T","^U"]]],["^1L","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","~$goog.array","~$goog.asserts"]]],["^1L","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^32","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1L","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^33","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^36"]]],["^1L","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^33"]]],["^1L","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^33"]]],"~:SHADOW-TIMESTAMP",[1611324937000,1611324937000,1611090469000],["^1L","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^33","~$goog.reflect"]]],["^1L","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^33","~$goog.html.trustedtypes","^39","^3:","^3;","^3<"]]],["^1L","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^32","^33","~$goog.html.SafeUrl","^3;","^3<","^36"]]],["^1L","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^33","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3@","^38","~$goog.html.uncheckedconversions","^3;","^36"]]],["^1L","devtools/prefs.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^X","~$devtools.defaults"]]],["^1L","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1L","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^32","^33","~$goog.dom.TagName","~$goog.dom.tags","^3D","^3E","~$goog.html.SafeStyleSheet","^3@","^38","^3?","^39","^3:","~$goog.labs.userAgent.browser","^35","^3;","^3<","^36"]]],["^1L","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^35"]]],["^1L","devtools/munging.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^X","~$clojure.string","~$devtools.context","^35","~$goog.string.StringBuffer"]]],["^1L","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1L","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^32","^33","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1L","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",[]]],["^1L","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^32","^35"]]],["^1L","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^X","^3S","^3P"]]],["^1L","devtools/formatters/state.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^X"]]],["^1L","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","~$goog.dom.safe","^3F","^3;","^36"]]],["^1L","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^36"]]],["^1L","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^32","^33","^3B","~$goog.math"]]],["^1L","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^33","^3C","^3D","^3E","^3L","^3@","^38","^3;","^36"]]],["^1L","devtools/defaults.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^X"]]],["^1L","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y"]]],["^1L","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","~$goog.math.Long","~$goog.math.Integer","^3S","^35","^32","~$goog.Uri","^3P"]]],["^1L","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^33","^3?","^3;","^3<"]]],["^1L","devtools/context.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^X"]]],["^1L","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^32","^33","^3E","^35","^3;","^3<","^36"]]],["^1L","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^3>"]]],["^1L","devtools/format.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^X","^3O"]]],["^1L","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^32","^33","^3S"]]],["^1L","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^33","^3<"]]],["^1L","devtools/protocols.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^2X",["^ ","^2Y",null,"^2Z",["^L",[]],"^2[",["^Y","^X"]]]]],"~:clj-info",["^ ","jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/logging.clj",1611090478000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/types.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/oops.clj",1611324935000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1611090469000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/report.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/munging.clj",1611324935000,"jar:file:/home/cesar/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1611087324000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/core.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1611090468000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/read.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1611090468000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coerce.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1611090468000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1611090469000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/prefs.clj",1611324935000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1611090468000,"jar:file:/home/cesar/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1611090468000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coercers.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/defaults.clj",1611324935000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",1,"^8",5,"^9",1,"^:",33],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",["^ ","^I","^J"],"^K",["^L",[]],"^M","^N","^Q",null,"^R",["^ ","^S","^S","^T","^T","^U","^U","^V","^V","^W","^W","^X","^X","^Y","^Y"],"^Z",["^L",["^[","^10"]],"~:shadow/js-access-global",["^L",["Error"]],"^11",["^ ","^12","^U","^13","^W","^14","^U","^15","^T","^16","^V","^17","^V","^18","^U","^19","^W","^1:","^V","^1;","^W","^1<","^S","^1=","^V","^1>","^V","^1?","^W","^1@","^U","^1A","^V","^1B","^W","^1C","^V"],"~:defs",["^ ","~$->TemplateWriter",["^ ","~:protocol-inline",null,"^5",["^ ","~:protocols",["^L",["~$cljs.core/IWriter","~$cljs.core/Object"]],"^6","devtools/formatters/printing.cljs","^:",24,"^8",10,"~:factory","~:positional","^7",31,"^9",31,"~:arglists",["^1E",["~$quote",["^1E",[["~$group","~$markup-db"]]]]],"~:skip-protocol-flag",["^L",["^50"]],"~:doc","Positional factory function for devtools.formatters.printing/TemplateWriter."],"^4[",["^L",["^50","^51"]],"^M","^2S","^6","devtools/formatters/printing.cljs","^:",24,"~:method-params",["^1E",[["^56","^57"]]],"~:protocol-impl",null,"~:arglists-meta",["^1E",[null,null]],"^8",1,"~:variadic?",false,"^52","^53","^7",31,"~:ret-tag","^2Q","^9",31,"~:max-fixed-arity",2,"~:fn-var",true,"^54",["^1E",["^55",["^1E",[["^56","^57"]]]]],"^58",["^L",["^50"]],"^59","Positional factory function for devtools.formatters.printing/TemplateWriter."],"~$alt-printer-impl",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",112,"^8",7,"^9",112,"^:",23,"^54",["^1E",["^55",["^1E",[["~$obj","~$writer","~$opts"]]]]]],"^M","^2N","^6","devtools/formatters/printing.cljs","^:",23,"^5:",["^1E",[["^5B","^5C","^5D"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",112,"^9",112,"^5?",3,"^5@",true,"^54",["^1E",["^55",["^1E",[["^5B","^5C","^5D"]]]]]],"~$markup?",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",13,"^8",7,"^9",13,"^:",14,"^54",["^1E",["^55",["^1E",[["~$value"]]]]]],"^M","^2G","^6","devtools/formatters/printing.cljs","^:",14,"^5:",["^1E",[["^5F"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",13,"^5>","~$any","^9",13,"^5?",1,"^5@",true,"^54",["^1E",["^55",["^1E",[["^5F"]]]]]],"~$wrap-group-in-meta-if-needed",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",62,"^8",7,"^9",62,"^:",35,"^54",["^1E",["^55",["^1E",[["^56","^5F","^57"]]]]]],"^M","^2F","^6","devtools/formatters/printing.cljs","^:",35,"^5:",["^1E",[["^56","^5F","^57"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",62,"^5>",["^L",[null,"~$cljs.core/IVector"]],"^9",62,"^5?",3,"^5@",true,"^54",["^1E",["^55",["^1E",[["^56","^5F","^57"]]]]]],"~$mark-as-markup",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",16,"^8",7,"^9",16,"^:",21,"^54",["^1E",["^55",["^1E",[["^5F"]]]]]],"^M","^2>","^6","devtools/formatters/printing.cljs","^:",21,"^5:",["^1E",[["^5F"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",16,"^5>",["^L",["~$clj","~$cljs.core/MetaFn","~$clj-nil"]],"^9",16,"^5?",1,"^5@",true,"^54",["^1E",["^55",["^1E",[["^5F"]]]]]],"~$detect-edge-case-and-patch-it",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",78,"^8",7,"^9",78,"^:",36,"^54",["^1E",["^55",["^1E",[["^56","^5B","^57"]]]]]],"^M","^2@","^6","devtools/formatters/printing.cljs","^:",36,"^5:",["^1E",[["^56","^5B","^57"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",78,"^5>",["^L",[null,"^5I"]],"^9",78,"^5?",3,"^5@",true,"^54",["^1E",["^55",["^1E",[["^56","^5B","^57"]]]]]],"~$wrap-group-in-reference-if-needed",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",48,"^8",7,"^9",48,"^:",40,"^54",["^1E",["^55",["^1E",[["^56","^5B","^57"]]]]]],"^M","^28","^6","devtools/formatters/printing.cljs","^:",40,"^5:",["^1E",[["^56","^5B","^57"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",48,"^5>",["^L",[null,"^5I"]],"^9",48,"^5?",3,"^5@",true,"^54",["^1E",["^55",["^1E",[["^56","^5B","^57"]]]]]],"~$managed-print-via-writer",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",139,"^8",7,"^9",139,"^:",31,"^54",["^1E",["^55",["^1E",[["^5F","~$tag","^57"]]]]]],"^M","^23","^6","devtools/formatters/printing.cljs","^:",31,"^5:",["^1E",[["^5F","^5Q","^57"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",139,"^5>","~$cljs.core/LazySeq","^9",139,"^5?",3,"^5@",true,"^54",["^1E",["^55",["^1E",[["^5F","^5Q","^57"]]]]]],"~$already-reference?",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",44,"^8",7,"^9",44,"^:",25,"^54",["^1E",["^55",["^1E",[["^56"]]]]]],"^M","^22","^6","devtools/formatters/printing.cljs","^:",25,"^5:",["^1E",[["^56"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",44,"^5>",["^L",["~$boolean","^5M"]],"^9",44,"^5?",1,"^5@",true,"^54",["^1E",["^55",["^1E",[["^56"]]]]]],"~$TemplateWriter",["^ ","~:num-fields",2,"^4[",["^L",["^50","^51"]],"^M","^2Q","^6","devtools/formatters/printing.cljs","^:",24,"~:type",true,"^8",10,"^7",31,"~:record",false,"^9",31,"~:tag","~$function","^58",["^L",["^50"]]],"~$wrap-value-as-reference-if-needed",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",24,"^8",7,"^9",24,"^:",40,"^54",["^1E",["^55",["^1E",[["^57","^5F"]]]]]],"^M","^2I","^6","devtools/formatters/printing.cljs","^:",40,"^5:",["^1E",[["^57","^5F"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",24,"^5>",["^L",[null,"^5K","^5L","^5M"]],"^9",24,"^5?",2,"^5@",true,"^54",["^1E",["^55",["^1E",[["^57","^5F"]]]]]],"~$managed-print-via-protocol",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",143,"^8",7,"^9",143,"^:",33,"^54",["^1E",["^55",["^1E",[["^5F","^5Q","^57"]]]]]],"^M","^1X","^6","devtools/formatters/printing.cljs","^:",33,"^5:",["^1E",[["^5F","^5Q","^57"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",143,"^5>","^5R","^9",143,"^5?",3,"^5@",true,"^54",["^1E",["^55",["^1E",[["^5F","^5Q","^57"]]]]]],"~$alt-printer-job",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",100,"^8",7,"^9",100,"^:",22,"^54",["^1E",["^55",["^1E",[["^5B","^5C","^5D"]]]]]],"^M","^26","^6","devtools/formatters/printing.cljs","^:",22,"^5:",["^1E",[["^5B","^5C","^5D"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",100,"^5>","^5G","^9",100,"^5?",3,"^5@",true,"^54",["^1E",["^55",["^1E",[["^5B","^5C","^5D"]]]]]],"~$make-template-writer",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",39,"^8",7,"^9",39,"^:",27,"^54",["^1E",["^55",["^1E",[["^57"]]]]]],"^M","^20","^6","devtools/formatters/printing.cljs","^:",27,"^5:",["^1E",[["^57"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",39,"^5>","^2Q","^9",39,"^5?",1,"^5@",true,"^54",["^1E",["^55",["^1E",[["^57"]]]]]],"~$wrap-group-in-circular-warning-if-needed",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",57,"^8",7,"^9",57,"^:",47,"^54",["^1E",["^55",["^1E",[["^56","^57","~$circular?"]]]]]],"^M","^2<","^6","devtools/formatters/printing.cljs","^:",47,"^5:",["^1E",[["^56","^57","^64"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",57,"^5>",["^L",[null,"^5I"]],"^9",57,"^5?",3,"^5@",true,"^54",["^1E",["^55",["^1E",[["^56","^57","^64"]]]]]],"~$managed-print",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",123,"^8",7,"^9",123,"^:",20,"^54",["^1E",["^55",["^1E",[["^5Q","^57","~$printer"]]]]]],"^M","^29","^6","devtools/formatters/printing.cljs","^:",20,"^5:",["^1E",[["^5Q","^57","^66"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",123,"^5>","^5R","^9",123,"^5?",3,"^5@",true,"^54",["^1E",["^55",["^1E",[["^5Q","^57","^66"]]]]]],"~$build-markup",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",19,"^8",7,"^9",19,"^:",19,"^54",["^1E",["^55",["^1E",[["^57","~$fn-key","~$&","~$args"]]]]],"~:top-fn",["^ ","^5=",true,"~:fixed-arity",2,"^5?",2,"^5:",[["^1E",["^57","^68","^69"]]],"^54",["^1E",[["^57","^68","~$&","^69"]]],"^5<",["^1E",[null]]]],"^M","^2?","^6","devtools/formatters/printing.cljs","^:",19,"^6:",["^ ","^5=",true,"^6;",2,"^5?",2,"^5:",[["^1E",["^57","^68","^69"]]],"^54",["^1E",[["^57","^68","~$&","^69"]]],"^5<",["^1E",[null]]],"^5:",[["^1E",["^57","^68","^69"]]],"^5;",null,"^6;",2,"^5<",["^1E",[null]],"^8",1,"^5=",true,"~:methods",[["^ ","^6;",2,"^5=",true,"^5Y",["^L",["^5K","^5L","^5M"]]]],"^7",19,"^5>","^5G","^9",19,"^5?",2,"^5@",true,"^54",["^1E",[["^57","^68","~$&","^69"]]]],"~$post-process-printed-output",["^ ","^4Z",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",91,"^8",7,"^9",91,"^:",34,"^54",["^1E",["^55",["^1E",[["~$output-group","^5B","^57","^64"]]]]]],"^M","^2=","^6","devtools/formatters/printing.cljs","^:",34,"^5:",["^1E",[["^6>","^5B","^57","^64"]]],"^5;",null,"^5<",["^1E",[null,null]],"^8",1,"^5=",false,"^7",91,"^5>",["^L",[null,"^5I"]],"^9",91,"^5?",4,"^5@",true,"^54",["^1E",["^55",["^1E",[["^6>","^5B","^57","^64"]]]]]]],"^10",["^ ","^J","^J","^X","^X","^S","^S"],"~:cljs.analyzer/constants",["^ ","^Z",["^L",["~:render-metas","~:else","~:max-header-elements","^56","~:fallback-impl","~:meta-wrapper","~:raw-surrogate","~:native-reference","~:markup-db","~:reference-surrogate","~:more-marker","~:reference","~:print-length","^57","~:circular-reference","~:expandable","~:target","~:mutable","~:alt-impl","~:atomic","~:devtools.formatters.printing/markup"]],"~:order",["^6R","^6H","^56","^6O","^57","^6M","^6E","^6N","^6J","^6L","^6@","^6D","^6F","^6A","^6G","^6Q","^6C","^6K","^6P","^6I","^6B"]],"^1H",["^ ","^10",["^L",[]],"^[",["^L",[]]],"^1I",["^ "],"^1J",["^Y","^X","^S","^T","^U","^V","^W"]],"^P","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^2W",[["^6V","~:static-fns"],true,["^6V","~:shadow-tweaks"],null,["^6V","~:source-map-inline"],null,["^6V","~:elide-asserts"],false,["^6V","~:optimize-constants"],null,["^6V","^1O"],null,["^6V","~:external-config"],null,["^6V","~:tooling-config"],null,["^6V","~:emit-constants"],null,["^6V","~:load-tests"],null,["^6V","~:form-size-threshold"],null,["^6V","~:data-readers"],null,["^6V","~:infer-externs"],"~:auto",["^6V","^1Q"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6V","~:fn-invoke-direct"],null,["^6V","~:source-map"],"/dev/null"]]]
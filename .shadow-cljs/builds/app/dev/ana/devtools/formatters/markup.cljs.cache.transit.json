["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.markup');\ndevtools.formatters.markup.print_with = (function devtools$formatters$markup$print_with(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31598 = arguments.length;\nvar i__4737__auto___31599 = (0);\nwhile(true){\nif((i__4737__auto___31599 < len__4736__auto___31598)){\nargs__4742__auto__.push((arguments[i__4737__auto___31599]));\n\nvar G__31600 = (i__4737__auto___31599 + (1));\ni__4737__auto___31599 = G__31600;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic = (function (method,value,tag,p__31333){\nvar vec__31334 = p__31333;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31334,(0),null);\nvar job_fn = (function (){\nvar G__31337 = value;\nvar G__31338 = tag;\nvar G__31339 = (devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0 ? devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0() : devtools.formatters.markup.get_markup_db.call(null));\nreturn (method.cljs$core$IFn$_invoke$arity$3 ? method.cljs$core$IFn$_invoke$arity$3(G__31337,G__31338,G__31339) : method.call(null,G__31337,G__31338,G__31339));\n});\nif((!((max_level == null)))){\nvar _STAR_print_level_STAR__orig_val__31340 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__31341 = (max_level + (1));\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__31341);\n\ntry{return job_fn();\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__31340);\n}} else {\nreturn job_fn();\n}\n}));\n\n(devtools.formatters.markup.print_with.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_with.cljs$lang$applyTo = (function (seq31329){\nvar G__31330 = cljs.core.first(seq31329);\nvar seq31329__$1 = cljs.core.next(seq31329);\nvar G__31331 = cljs.core.first(seq31329__$1);\nvar seq31329__$2 = cljs.core.next(seq31329__$1);\nvar G__31332 = cljs.core.first(seq31329__$2);\nvar seq31329__$3 = cljs.core.next(seq31329__$2);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31330,G__31331,G__31332,seq31329__$3);\n}));\n\ndevtools.formatters.markup.print_via_writer = (function devtools$formatters$markup$print_via_writer(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31601 = arguments.length;\nvar i__4737__auto___31602 = (0);\nwhile(true){\nif((i__4737__auto___31602 < len__4736__auto___31601)){\nargs__4742__auto__.push((arguments[i__4737__auto___31602]));\n\nvar G__31603 = (i__4737__auto___31602 + (1));\ni__4737__auto___31602 = G__31603;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__31354){\nvar vec__31355 = p__31354;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31355,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_writer,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_writer.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_writer.cljs$lang$applyTo = (function (seq31342){\nvar G__31343 = cljs.core.first(seq31342);\nvar seq31342__$1 = cljs.core.next(seq31342);\nvar G__31344 = cljs.core.first(seq31342__$1);\nvar seq31342__$2 = cljs.core.next(seq31342__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31343,G__31344,seq31342__$2);\n}));\n\ndevtools.formatters.markup.print_via_protocol = (function devtools$formatters$markup$print_via_protocol(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31604 = arguments.length;\nvar i__4737__auto___31605 = (0);\nwhile(true){\nif((i__4737__auto___31605 < len__4736__auto___31604)){\nargs__4742__auto__.push((arguments[i__4737__auto___31605]));\n\nvar G__31606 = (i__4737__auto___31605 + (1));\ni__4737__auto___31605 = G__31606;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__31364){\nvar vec__31365 = p__31364;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31365,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_protocol,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_protocol.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_protocol.cljs$lang$applyTo = (function (seq31361){\nvar G__31362 = cljs.core.first(seq31361);\nvar seq31361__$1 = cljs.core.next(seq31361);\nvar G__31363 = cljs.core.first(seq31361__$1);\nvar seq31361__$2 = cljs.core.next(seq31361__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31362,G__31363,seq31361__$2);\n}));\n\ndevtools.formatters.markup._LT_expandable_GT_ = (function devtools$formatters$markup$_LT_expandable_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31607 = arguments.length;\nvar i__4737__auto___31608 = (0);\nwhile(true){\nif((i__4737__auto___31608 < len__4736__auto___31607)){\nargs__4742__auto__.push((arguments[i__4737__auto___31608]));\n\nvar G__31609 = (i__4737__auto___31608 + (1));\ni__4737__auto___31608 = G__31609;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nvar inner_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-inner-tag\",\"expandable-inner-tag\",-799648560)], null),children);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-tag\",\"expandable-tag\",151027578),new cljs.core.Keyword(null,\"expandable-symbol\",\"expandable-symbol\",1644611290),inner_markup], null);\n}));\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$applyTo = (function (seq31368){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq31368));\n}));\n\ndevtools.formatters.markup._LT_raw_surrogate_GT_ = (function devtools$formatters$markup$_LT_raw_surrogate_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31610 = arguments.length;\nvar i__4737__auto___31616 = (0);\nwhile(true){\nif((i__4737__auto___31616 < len__4736__auto___31610)){\nargs__4742__auto__.push((arguments[i__4737__auto___31616]));\n\nvar G__31617 = (i__4737__auto___31616 + (1));\ni__4737__auto___31616 = G__31617;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"surrogate\"], null),args);\n}));\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$applyTo = (function (seq31398){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq31398));\n}));\n\ndevtools.formatters.markup._LT_surrogate_GT_ = (function devtools$formatters$markup$_LT_surrogate_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31618 = arguments.length;\nvar i__4737__auto___31619 = (0);\nwhile(true){\nif((i__4737__auto___31619 < len__4736__auto___31618)){\nargs__4742__auto__.push((arguments[i__4737__auto___31619]));\n\nvar G__31620 = (i__4737__auto___31619 + (1));\ni__4737__auto___31619 = G__31620;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (p__31429){\nvar vec__31430 = p__31429;\nvar object = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31430,(0),null);\nvar header = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31430,(1),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31430,(2),null);\nvar start_index = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31430,(3),null);\nvar header__$1 = (((!((body == null))))?devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header], 0)):header);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,header__$1,body,start_index], 0));\n}));\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$applyTo = (function (seq31399){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq31399));\n}));\n\ndevtools.formatters.markup._LT_reference_GT_ = (function devtools$formatters$markup$_LT_reference_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31621 = arguments.length;\nvar i__4737__auto___31622 = (0);\nwhile(true){\nif((i__4737__auto___31622 < len__4736__auto___31621)){\nargs__4742__auto__.push((arguments[i__4737__auto___31622]));\n\nvar G__31623 = (i__4737__auto___31622 + (1));\ni__4737__auto___31622 = G__31623;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reference\"], null),args);\n}));\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$applyTo = (function (seq31433){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq31433));\n}));\n\ndevtools.formatters.markup._LT_reference_surrogate_GT_ = (function devtools$formatters$markup$_LT_reference_surrogate_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31624 = arguments.length;\nvar i__4737__auto___31625 = (0);\nwhile(true){\nif((i__4737__auto___31625 < len__4736__auto___31624)){\nargs__4742__auto__.push((arguments[i__4737__auto___31625]));\n\nvar G__31626 = (i__4737__auto___31625 + (1));\ni__4737__auto___31625 = G__31626;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_surrogate_GT_,args)], 0));\n}));\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$applyTo = (function (seq31440){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq31440));\n}));\n\ndevtools.formatters.markup._LT_circular_reference_GT_ = (function devtools$formatters$markup$_LT_circular_reference_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31627 = arguments.length;\nvar i__4737__auto___31628 = (0);\nwhile(true){\nif((i__4737__auto___31628 < len__4736__auto___31627)){\nargs__4742__auto__.push((arguments[i__4737__auto___31628]));\n\nvar G__31629 = (i__4737__auto___31628 + (1));\ni__4737__auto___31628 = G__31629;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-tag\",\"circular-reference-tag\",858973471),new cljs.core.Keyword(null,\"circular-ref-icon\",\"circular-ref-icon\",-2087682919)], null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-body-tag\",\"circular-reference-body-tag\",-1301830023)], null),children)], 0));\n}));\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$applyTo = (function (seq31453){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq31453));\n}));\n\ndevtools.formatters.markup._LT_native_reference_GT_ = (function devtools$formatters$markup$_LT_native_reference_GT_(object){\nvar reference = devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,(function (p1__31465_SHARP_){\nreturn devtools.formatters.state.set_prevent_recursion(p1__31465_SHARP_,true);\n})], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-wrapper-tag\",\"native-reference-wrapper-tag\",2047690940),new cljs.core.Keyword(null,\"native-reference-background\",\"native-reference-background\",-286129550),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-tag\",\"native-reference-tag\",-1516119079),reference], null)], null);\n});\ndevtools.formatters.markup._LT_header_expander_GT_ = (function devtools$formatters$markup$_LT_header_expander_GT_(object){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,new cljs.core.Keyword(null,\"header-expander-symbol\",\"header-expander-symbol\",907531743),new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0)),devtools.formatters.state.reset_depth_limits], 0));\n});\ndevtools.formatters.markup._LT_cljs_land_GT_ = (function devtools$formatters$markup$_LT_cljs_land_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31630 = arguments.length;\nvar i__4737__auto___31631 = (0);\nwhile(true){\nif((i__4737__auto___31631 < len__4736__auto___31630)){\nargs__4742__auto__.push((arguments[i__4737__auto___31631]));\n\nvar G__31632 = (i__4737__auto___31631 + (1));\ni__4737__auto___31631 = G__31632;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cljs-land-tag\",\"cljs-land-tag\",-7524377)], null),children);\n}));\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$applyTo = (function (seq31478){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq31478));\n}));\n\ndevtools.formatters.markup._LT_nil_GT_ = (function devtools$formatters$markup$_LT_nil_GT_(){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil-tag\",\"nil-tag\",-1587449115),new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], null);\n});\ndevtools.formatters.markup._LT_bool_GT_ = (function devtools$formatters$markup$_LT_bool_GT_(bool){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bool-tag\",\"bool-tag\",-10409808),cljs.core.str.cljs$core$IFn$_invoke$arity$1(bool)], null);\n});\ndevtools.formatters.markup._LT_keyword_GT_ = (function devtools$formatters$markup$_LT_keyword_GT_(keyword){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keyword-tag\",\"keyword-tag\",1587228387),cljs.core.str.cljs$core$IFn$_invoke$arity$1(keyword)], null);\n});\ndevtools.formatters.markup._LT_symbol_GT_ = (function devtools$formatters$markup$_LT_symbol_GT_(symbol){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"symbol-tag\",\"symbol-tag\",-100807517),cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)], null);\n});\ndevtools.formatters.markup._LT_number_GT_ = (function devtools$formatters$markup$_LT_number_GT_(number){\nif(cljs.core.integer_QMARK_(number)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"integer-tag\",\"integer-tag\",698000472),number], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-tag\",\"float-tag\",-390834106),number], null);\n}\n});\ndevtools.formatters.markup._LT_string_GT_ = (function devtools$formatters$markup$_LT_string_GT_(string){\nvar dq = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"dq\",\"dq\",-1690275860));\nvar re_nl = (new RegExp(\"\\n\",\"g\"));\nvar nl_marker = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"new-line-string-replacer\",\"new-line-string-replacer\",-753206206));\nvar inline_string = string.replace(re_nl,nl_marker);\nvar max_inline_string_size = (devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)) + devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar quote_string = (function (s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq)].join('');\n});\nvar should_abbreviate_QMARK_ = (cljs.core.count(inline_string) > max_inline_string_size);\nif(should_abbreviate_QMARK_){\nvar abbreviated_string = devtools.formatters.helpers.abbreviate_long_string(inline_string,devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-abbreviation-marker\",\"string-abbreviation-marker\",-347785112)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar abbreviated_string_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(abbreviated_string)], null);\nvar string_with_nl_markers = string.replace(re_nl,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(nl_marker),\"\\n\"].join(''));\nvar details_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expanded-string-tag\",\"expanded-string-tag\",-2125162127),string_with_nl_markers], null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([string,abbreviated_string_markup,details_markup], 0));\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(inline_string)], null);\n}\n});\ndevtools.formatters.markup._LT_preview_GT_ = (function devtools$formatters$markup$_LT_preview_GT_(value){\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"header-tag\",\"header-tag\",1594852433),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-print-level\",\"max-print-level\",-462237413))], 0));\n});\ndevtools.formatters.markup._LT_body_GT_ = (function devtools$formatters$markup$_LT_body_GT_(markup){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-tag\",\"body-tag\",433527431),markup], null);\n});\ndevtools.formatters.markup._LT_aligned_body_GT_ = (function devtools$formatters$markup$_LT_aligned_body_GT_(markups_lists){\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aligned-li-tag\",\"aligned-li-tag\",1727029722)], null),line);\n} else {\nreturn null;\n}\n});\nvar aligned_lines = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn devtools.formatters.markup._LT_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747)], null),aligned_lines));\n});\ndevtools.formatters.markup._LT_standard_body_GT_ = (function devtools$formatters$markup$_LT_standard_body_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31633 = arguments.length;\nvar i__4737__auto___31634 = (0);\nwhile(true){\nif((i__4737__auto___31634 < len__4736__auto___31633)){\nargs__4742__auto__.push((arguments[i__4737__auto___31634]));\n\nvar G__31635 = (i__4737__auto___31634 + (1));\ni__4737__auto___31634 = G__31635;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (markups_lists,p__31495){\nvar vec__31496 = p__31495;\nvar no_margin_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31496,(0),null);\nvar ol_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747):new cljs.core.Keyword(null,\"standard-ol-tag\",\"standard-ol-tag\",1120081433));\nvar li_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-li-no-margin-tag\",\"standard-li-no-margin-tag\",-844555468):new cljs.core.Keyword(null,\"standard-li-tag\",\"standard-li-tag\",-932749876));\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [li_tag], null),line);\n} else {\nreturn null;\n}\n});\nvar lines_markups = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ol_tag], null),lines_markups);\n}));\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$applyTo = (function (seq31493){\nvar G__31494 = cljs.core.first(seq31493);\nvar seq31493__$1 = cljs.core.next(seq31493);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31494,seq31493__$1);\n}));\n\ndevtools.formatters.markup._LT_standard_body_reference_GT_ = (function devtools$formatters$markup$_LT_standard_body_reference_GT_(o){\nreturn devtools.formatters.markup._LT_standard_body_GT_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([o], 0))], null)], null));\n});\ndevtools.formatters.markup._LT_index_GT_ = (function devtools$formatters$markup$_LT_index_GT_(value){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"index-tag\",\"index-tag\",693492486),value,new cljs.core.Keyword(null,\"line-index-separator\",\"line-index-separator\",-1735989246)], null);\n});\ndevtools.formatters.markup.body_line = (function devtools$formatters$markup$body_line(index,value){\nvar index_markup = devtools.formatters.markup._LT_index_GT_(index);\nvar value_markup = devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"item-tag\",\"item-tag\",-988763304),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"body-line-max-print-level\",\"body-line-max-print-level\",571158623))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index_markup,value_markup], null);\n});\ndevtools.formatters.markup.prepare_body_lines = (function devtools$formatters$markup$prepare_body_lines(data,starting_index){\nvar work = data;\nvar index = starting_index;\nvar lines = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(work)){\nreturn lines;\n} else {\nvar G__31658 = cljs.core.rest(work);\nvar G__31659 = (index + (1));\nvar G__31660 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,devtools.formatters.markup.body_line(index,cljs.core.first(work)));\nwork = G__31658;\nindex = G__31659;\nlines = G__31660;\ncontinue;\n}\nbreak;\n}\n});\ndevtools.formatters.markup.body_lines = (function devtools$formatters$markup$body_lines(value,starting_index){\nvar seq = cljs.core.seq(value);\nvar max_number_body_items = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-number-body-items\",\"max-number-body-items\",299914624));\nvar chunk = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar rest = cljs.core.drop.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar lines = devtools.formatters.markup.prepare_body_lines(chunk,starting_index);\nvar continue_QMARK_ = (!(cljs.core.empty_QMARK_(cljs.core.take.cljs$core$IFn$_invoke$arity$2((1),rest))));\nif((!(continue_QMARK_))){\nreturn lines;\n} else {\nvar more_label_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-items-more-tag\",\"body-items-more-tag\",867141569),new cljs.core.Keyword(null,\"body-items-more-label\",\"body-items-more-label\",-1561152123)], null);\nvar start_index = (starting_index + max_number_body_items);\nvar more_markup = devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rest,more_label_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721),start_index], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [more_markup], null));\n}\n});\ndevtools.formatters.markup._LT_details_GT_ = (function devtools$formatters$markup$_LT_details_GT_(value,starting_index){\nvar has_continuation_QMARK_ = (starting_index > (0));\nvar body_markup = devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup.body_lines(value,starting_index),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([has_continuation_QMARK_], 0));\nif(has_continuation_QMARK_){\nreturn body_markup;\n} else {\nreturn devtools.formatters.markup._LT_body_GT_(body_markup);\n}\n});\ndevtools.formatters.markup._LT_list_details_GT_ = (function devtools$formatters$markup$_LT_list_details_GT_(items,_opts){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,items));\n});\ndevtools.formatters.markup._LT_list_GT_ = (function devtools$formatters$markup$_LT_list_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31661 = arguments.length;\nvar i__4737__auto___31662 = (0);\nwhile(true){\nif((i__4737__auto___31662 < len__4736__auto___31661)){\nargs__4742__auto__.push((arguments[i__4737__auto___31662]));\n\nvar G__31663 = (i__4737__auto___31662 + (1));\ni__4737__auto___31662 = G__31663;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (items,max_count,p__31503){\nvar vec__31504 = p__31503;\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31504,(0),null);\nvar items_markups = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_count,items);\nvar more_count = (cljs.core.count(items) - max_count);\nvar more_QMARK_ = (more_count > (0));\nvar separator = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-separator\",\"list-separator\",900562185);\n}\n})();\nvar more_symbol = ((more_QMARK_)?(function (){var temp__5733__auto__ = new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar more_symbol = temp__5733__auto__;\nif(cljs.core.fn_QMARK_(more_symbol)){\nreturn (more_symbol.cljs$core$IFn$_invoke$arity$1 ? more_symbol.cljs$core$IFn$_invoke$arity$1(more_count) : more_symbol.call(null,more_count));\n} else {\nreturn more_symbol;\n}\n} else {\nreturn devtools.formatters.helpers.get_more_marker(more_count);\n}\n})():null);\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-tag\",\"list-tag\",1555796884);\n}\n})(),(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-open-symbol\",\"list-open-symbol\",-1162287443);\n}\n})()], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(separator,items_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator,more_symbol], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-close-symbol\",\"list-close-symbol\",-1120016586);\n}\n})()], null)], 0));\nif(more_QMARK_){\nvar details_markup = new cljs.core.Keyword(null,\"details\",\"details\",1956795411).cljs$core$IFn$_invoke$arity$1(opts);\nvar default_details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(devtools.formatters.markup._LT_list_details_GT_,items,opts);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,(function (){var or__4126__auto__ = details_markup;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn default_details_fn;\n}\n})()], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$applyTo = (function (seq31499){\nvar G__31500 = cljs.core.first(seq31499);\nvar seq31499__$1 = cljs.core.next(seq31499);\nvar G__31501 = cljs.core.first(seq31499__$1);\nvar seq31499__$2 = cljs.core.next(seq31499__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31500,G__31501,seq31499__$2);\n}));\n\ndevtools.formatters.markup._LT_meta_GT_ = (function devtools$formatters$markup$_LT_meta_GT_(metadata){\nvar body_fn = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-body-tag\",\"meta-body-tag\",1689183121),devtools.formatters.markup._LT_preview_GT_(metadata)], null);\n});\nvar header = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-header-tag\",\"meta-header-tag\",-1207812581),\"meta\"], null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-reference-tag\",\"meta-reference-tag\",914791936),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metadata,header,body_fn], 0))], null);\n});\ndevtools.formatters.markup._LT_meta_wrapper_GT_ = (function devtools$formatters$markup$_LT_meta_wrapper_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31664 = arguments.length;\nvar i__4737__auto___31665 = (0);\nwhile(true){\nif((i__4737__auto___31665 < len__4736__auto___31664)){\nargs__4742__auto__.push((arguments[i__4737__auto___31665]));\n\nvar G__31666 = (i__4737__auto___31665 + (1));\ni__4737__auto___31665 = G__31666;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (metadata,children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-wrapper-tag\",\"meta-wrapper-tag\",1927429038)], null),children,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_meta_GT_(metadata)], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$applyTo = (function (seq31508){\nvar G__31509 = cljs.core.first(seq31508);\nvar seq31508__$1 = cljs.core.next(seq31508);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31509,seq31508__$1);\n}));\n\ndevtools.formatters.markup._LT_function_details_GT_ = (function devtools$formatters$markup$_LT_function_details_GT_(fn_obj,ns,_name,arities,prefix){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar arities__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.wrap_arity,arities);\nvar make_arity_markup_list = (function (arity){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-multi-arity-args-indent-tag\",\"fn-multi-arity-args-indent-tag\",-1931373734),prefix], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),arity], null)], null);\n});\nvar arities_markupts_lists = (((cljs.core.count(arities__$1) > (1)))?cljs.core.map.cljs$core$IFn$_invoke$arity$2(make_arity_markup_list,arities__$1):null);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar native_markups_list = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(fn_obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arities_markupts_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_arities_GT_ = (function devtools$formatters$markup$_LT_arities_GT_(arities){\nvar multi_arity_QMARK_ = (cljs.core.count(arities) > (1));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),devtools.formatters.helpers.wrap_arity(((multi_arity_QMARK_)?devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653)):cljs.core.first(arities)))], null);\n});\ndevtools.formatters.markup._LT_function_GT_ = (function devtools$formatters$markup$_LT_function_GT_(fn_obj){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar vec__31532 = devtools.munging.parse_fn_info(fn_obj);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31532,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31532,(1),null);\nvar lambda_QMARK_ = cljs.core.empty_QMARK_(name);\nvar spacer_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"spacer\",\"spacer\",2067425139));\nvar rest_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"rest-symbol\",\"rest-symbol\",1021371174));\nvar multi_arity_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653));\nvar arities = devtools.munging.extract_arities(fn_obj,true,spacer_symbol,multi_arity_symbol,rest_symbol);\nvar arities_markup = devtools.formatters.markup._LT_arities_GT_(arities);\nvar name_markup = (((!(lambda_QMARK_)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-name-tag\",\"fn-name-tag\",555823755),name], null):null);\nvar icon_markup = ((lambda_QMARK_)?new cljs.core.Keyword(null,\"lambda-icon\",\"lambda-icon\",980753546):new cljs.core.Keyword(null,\"fn-icon\",\"fn-icon\",-1412665288));\nvar prefix_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-prefix-tag\",\"fn-prefix-tag\",1947411856),icon_markup,name_markup], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-header-tag\",\"fn-header-tag\",-1262068349),prefix_markup,arities_markup], null);\nvar details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_function_details_GT_,fn_obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arities,prefix_markup], 0));\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_obj,preview_markup,details_fn], 0));\n});\ndevtools.formatters.markup._LT_type_basis_item_GT_ = (function devtools$formatters$markup$_LT_type_basis_item_GT_(basis_item){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-item-tag\",\"type-basis-item-tag\",50612816),cljs.core.name(basis_item)], null);\n});\ndevtools.formatters.markup._LT_type_basis_GT_ = (function devtools$formatters$markup$_LT_type_basis_GT_(basis){\nvar item_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_type_basis_item_GT_,basis);\nvar children_markups = cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type-basis-item-separator\",\"type-basis-item-separator\",-2029193896),item_markups);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-tag\",\"type-basis-tag\",-2122159204)], null),children_markups);\n});\ndevtools.formatters.markup._LT_type_details_GT_ = (function devtools$formatters$markup$_LT_type_details_GT_(constructor_fn,ns,_name,basis){\nvar ns_markup = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar basis_markup = ((cljs.core.empty_QMARK_(basis))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"empty-basis-symbol\",\"empty-basis-symbol\",-1971559593)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"basis-icon\",\"basis-icon\",1917779567),devtools.formatters.markup._LT_type_basis_GT_(basis)], null));\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(constructor_fn)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [basis_markup,ns_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_type_GT_ = (function devtools$formatters$markup$_LT_type_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31667 = arguments.length;\nvar i__4737__auto___31668 = (0);\nwhile(true){\nif((i__4737__auto___31668 < len__4736__auto___31667)){\nargs__4742__auto__.push((arguments[i__4737__auto___31668]));\n\nvar G__31669 = (i__4737__auto___31668 + (1));\ni__4737__auto___31668 = G__31669;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__31541){\nvar vec__31542 = p__31541;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31542,(0),null);\nvar vec__31545 = devtools.munging.parse_constructor_info(constructor_fn);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31545,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31545,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31545,(2),null);\nvar name_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-name-tag\",\"type-name-tag\",-1317275511),name], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4126__auto__ = header_tag;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"type-header-tag\",\"type-header-tag\",1645372265);\n}\n})(),new cljs.core.Keyword(null,\"type-symbol\",\"type-symbol\",-941894755),name_markup], null);\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_type_details_GT_,constructor_fn,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([basis], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-wrapper-tag\",\"type-wrapper-tag\",-1732366004),new cljs.core.Keyword(null,\"type-header-background\",\"type-header-background\",-810861696),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-ref-tag\",\"type-ref-tag\",2126727355),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([constructor_fn,preview_markup,details_markup_fn], 0))], null)], null);\n}));\n\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$applyTo = (function (seq31539){\nvar G__31540 = cljs.core.first(seq31539);\nvar seq31539__$1 = cljs.core.next(seq31539);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31540,seq31539__$1);\n}));\n\ndevtools.formatters.markup._LT_standalone_type_GT_ = (function devtools$formatters$markup$_LT_standalone_type_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31670 = arguments.length;\nvar i__4737__auto___31671 = (0);\nwhile(true){\nif((i__4737__auto___31671 < len__4736__auto___31670)){\nargs__4742__auto__.push((arguments[i__4737__auto___31671]));\n\nvar G__31672 = (i__4737__auto___31671 + (1));\ni__4737__auto___31671 = G__31672;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__31550){\nvar vec__31551 = p__31550;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31551,(0),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standalone-type-tag\",\"standalone-type-tag\",-1677164791),devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header_tag], 0))], null);\n}));\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$applyTo = (function (seq31548){\nvar G__31549 = cljs.core.first(seq31548);\nvar seq31548__$1 = cljs.core.next(seq31548);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31549,seq31548__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_arity_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arity_GT_(arity_fn){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arity_fn], 0));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_details_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_details_GT_(fns){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,fns));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31673 = arguments.length;\nvar i__4737__auto___31674 = (0);\nwhile(true){\nif((i__4737__auto___31674 < len__4736__auto___31673)){\nargs__4742__auto__.push((arguments[i__4737__auto___31674]));\n\nvar G__31675 = (i__4737__auto___31674 + (1));\ni__4737__auto___31674 = G__31675;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fns,p__31556){\nvar vec__31557 = p__31556;\nvar max_fns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31557,(0),null);\nvar max_fns__$1 = (function (){var or__4126__auto__ = max_fns;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-protocol-method-arities-list\",\"max-protocol-method-arities-list\",-45936465));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fns) > max_fns__$1);\nvar aritites_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fns__$1,fns));\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-tag\",\"protocol-method-arities-header-tag\",734407707),new cljs.core.Keyword(null,\"protocol-method-arities-header-open-symbol\",\"protocol-method-arities-header-open-symbol\",1704200465)], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"protocol-method-arities-list-header-separator\",\"protocol-method-arities-list-header-separator\",-115158954),aritites_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-more-symbol\",\"protocol-method-arities-more-symbol\",-477018522)], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-close-symbol\",\"protocol-method-arities-header-close-symbol\",-1375237120)], null)], 0));\nif(more_QMARK_){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arities_details_GT_,fns);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,details_markup_fn], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$applyTo = (function (seq31554){\nvar G__31555 = cljs.core.first(seq31554);\nvar seq31554__$1 = cljs.core.next(seq31554);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31555,seq31554__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_GT_ = (function devtools$formatters$markup$_LT_protocol_method_GT_(name,arities){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-tag\",\"protocol-method-tag\",2032279830),new cljs.core.Keyword(null,\"method-icon\",\"method-icon\",-1678775281),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-name-tag\",\"protocol-method-name-tag\",-1030376744),name], null),devtools.formatters.markup._LT_protocol_method_arities_GT_(arities)], null);\n});\ndevtools.formatters.markup._LT_protocol_details_GT_ = (function devtools$formatters$markup$_LT_protocol_details_GT_(obj,ns,_name,selector,_fast_QMARK_){\nvar protocol_obj = devtools.munging.get_protocol_object(selector);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-ns-name-tag\",\"protocol-ns-name-tag\",1832081510),ns], null)], null):null);\nvar native_markups_list = (((!((protocol_obj == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(protocol_obj)], null):null);\nvar methods$ = devtools.munging.collect_protocol_methods(obj,selector);\nvar methods_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__31560){\nvar vec__31561 = p__31560;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31561,(0),null);\nvar arities = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31561,(1),null);\nreturn devtools.formatters.markup._LT_protocol_method_GT_(name,arities);\n}),methods$);\nvar methods_markups_lists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,methods_markups);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(methods_markups_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_protocol_GT_ = (function devtools$formatters$markup$_LT_protocol_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31690 = arguments.length;\nvar i__4737__auto___31691 = (0);\nwhile(true){\nif((i__4737__auto___31691 < len__4736__auto___31690)){\nargs__4742__auto__.push((arguments[i__4737__auto___31691]));\n\nvar G__31692 = (i__4737__auto___31691 + (1));\ni__4737__auto___31691 = G__31692;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocol,p__31567){\nvar vec__31568 = p__31567;\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31568,(0),null);\nvar map__31571 = protocol;\nvar map__31571__$1 = (((((!((map__31571 == null))))?(((((map__31571.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31571.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31571):map__31571);\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31571__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31571__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar selector = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31571__$1,new cljs.core.Keyword(null,\"selector\",\"selector\",762528866));\nvar fast_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31571__$1,new cljs.core.Keyword(null,\"fast?\",\"fast?\",-1813307150));\nvar preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4126__auto__ = tag;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"protocol-name-tag\",\"protocol-name-tag\",1508238310);\n}\n})(),name], null);\nvar prefix_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fast_QMARK_)?new cljs.core.Keyword(null,\"fast-protocol-tag\",\"fast-protocol-tag\",2066025065):new cljs.core.Keyword(null,\"slow-protocol-tag\",\"slow-protocol-tag\",2061129467)),new cljs.core.Keyword(null,\"protocol-background\",\"protocol-background\",1111513794)], null);\nif((!((obj == null)))){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_protocol_details_GT_,obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selector,fast_QMARK_], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,preview_markup,details_markup_fn], 0)));\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,preview_markup);\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$applyTo = (function (seq31564){\nvar G__31565 = cljs.core.first(seq31564);\nvar seq31564__$1 = cljs.core.next(seq31564);\nvar G__31566 = cljs.core.first(seq31564__$1);\nvar seq31564__$2 = cljs.core.next(seq31564__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31565,G__31566,seq31564__$2);\n}));\n\ndevtools.formatters.markup._LT_more_protocols_GT_ = (function devtools$formatters$markup$_LT_more_protocols_GT_(more_count){\nvar fake_protocol = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),devtools.formatters.helpers.get_more_marker(more_count)], null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic(null,fake_protocol,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"protocol-more-tag\",\"protocol-more-tag\",2098702865)], 0));\n});\ndevtools.formatters.markup._LT_protocols_list_GT_ = (function devtools$formatters$markup$_LT_protocols_list_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31693 = arguments.length;\nvar i__4737__auto___31694 = (0);\nwhile(true){\nif((i__4737__auto___31694 < len__4736__auto___31693)){\nargs__4742__auto__.push((arguments[i__4737__auto___31694]));\n\nvar G__31695 = (i__4737__auto___31694 + (1));\ni__4737__auto___31694 = G__31695;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocols,p__31576){\nvar vec__31577 = p__31576;\nvar max_protocols = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31577,(0),null);\nvar max_protocols__$1 = (function (){var or__4126__auto__ = max_protocols;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-list-protocols\",\"max-list-protocols\",-537135129));\n}\n})();\nvar protocols_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_GT_,obj),protocols);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic(protocols_markups,max_protocols__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"protocols-header-tag\",\"protocols-header-tag\",-734413384),new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825),new cljs.core.Keyword(null,\"protocols-list-open-symbol\",\"protocols-list-open-symbol\",-729713043),new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165),new cljs.core.Keyword(null,\"protocols-list-close-symbol\",\"protocols-list-close-symbol\",652072902),new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125),new cljs.core.Keyword(null,\"header-protocol-separator\",\"header-protocol-separator\",445531439),new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242),devtools.formatters.markup._LT_more_protocols_GT_], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$applyTo = (function (seq31573){\nvar G__31574 = cljs.core.first(seq31573);\nvar seq31573__$1 = cljs.core.next(seq31573);\nvar G__31575 = cljs.core.first(seq31573__$1);\nvar seq31573__$2 = cljs.core.next(seq31573__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31574,G__31575,seq31573__$2);\n}));\n\ndevtools.formatters.markup._LT_field_GT_ = (function devtools$formatters$markup$_LT_field_GT_(name,value){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-tag\",\"header-field-tag\",-1403476101),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-name-tag\",\"header-field-name-tag\",82291956),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null),new cljs.core.Keyword(null,\"header-field-value-spacer\",\"header-field-value-spacer\",-1210630679),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-value-tag\",\"header-field-value-tag\",-1708691701),devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),(function (p1__31580_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__31580_SHARP_,(1));\n})], 0))], null),new cljs.core.Keyword(null,\"header-field-separator\",\"header-field-separator\",-774444018)], null);\n});\ndevtools.formatters.markup._LT_fields_details_row_GT_ = (function devtools$formatters$markup$_LT_fields_details_row_GT_(field){\nvar vec__31581 = field;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31581,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31581,(1),null);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-tr-tag\",\"body-field-tr-tag\",37280691),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td1-tag\",\"body-field-td1-tag\",256357429),new cljs.core.Keyword(null,\"body-field-symbol\",\"body-field-symbol\",256897537),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-name-tag\",\"body-field-name-tag\",917867601),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td2-tag\",\"body-field-td2-tag\",94501500),new cljs.core.Keyword(null,\"body-field-value-spacer\",\"body-field-value-spacer\",1279911362)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td3-tag\",\"body-field-td3-tag\",-803119922),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-value-tag\",\"body-field-value-tag\",800789079),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0))], null)], null)], null);\n});\ndevtools.formatters.markup._LT_fields_GT_ = (function devtools$formatters$markup$_LT_fields_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___31697 = arguments.length;\nvar i__4737__auto___31698 = (0);\nwhile(true){\nif((i__4737__auto___31698 < len__4736__auto___31697)){\nargs__4742__auto__.push((arguments[i__4737__auto___31698]));\n\nvar G__31699 = (i__4737__auto___31698 + (1));\ni__4737__auto___31698 = G__31699;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fields,p__31586){\nvar vec__31587 = p__31586;\nvar max_fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31587,(0),null);\nif((cljs.core.count(fields) === (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-no-fields-symbol\",\"fields-header-no-fields-symbol\",-1749204979)], null);\n} else {\nvar max_fields__$1 = (function (){var or__4126__auto__ = max_fields;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-instance-header-fields\",\"max-instance-header-fields\",-126007269));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fields) > max_fields__$1);\nvar fields_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__31590){\nvar vec__31591 = p__31590;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31591,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31591,(1),null);\nreturn devtools.formatters.markup._LT_field_GT_(name,value);\n}),cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fields__$1,fields));\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-open-symbol\",\"fields-header-open-symbol\",-26243798)], null),fields_markups,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((more_QMARK_)?new cljs.core.Keyword(null,\"more-fields-symbol\",\"more-fields-symbol\",720022882):null),new cljs.core.Keyword(null,\"fields-header-close-symbol\",\"fields-header-close-symbol\",1615181116)], null)], 0));\n}\n}));\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$applyTo = (function (seq31584){\nvar G__31585 = cljs.core.first(seq31584);\nvar seq31584__$1 = cljs.core.next(seq31584);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31585,seq31584__$1);\n}));\n\ndevtools.formatters.markup._LT_fields_details_GT_ = (function devtools$formatters$markup$_LT_fields_details_GT_(fields,obj){\nvar protocols = devtools.munging.scan_protocols(obj);\nvar has_protocols_QMARK_ = (!(cljs.core.empty_QMARK_(protocols)));\nvar fields_markup = (((!((cljs.core.count(fields) === (0)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-icon\",\"fields-icon\",-436030420),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-body-fields-table-tag\",\"instance-body-fields-table-tag\",1306340776)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_fields_details_row_GT_,fields))], null):null);\nvar protocols_list_markup = ((has_protocols_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocols-icon\",\"protocols-icon\",-517302494),devtools.formatters.markup._LT_protocols_list_GT_(obj,protocols)], null):null);\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fields_markup,protocols_list_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_instance_GT_ = (function devtools$formatters$markup$_LT_instance_GT_(value){\nvar constructor_fn = devtools.formatters.helpers.get_constructor(value);\nvar vec__31594 = devtools.munging.parse_constructor_info(constructor_fn);\nvar _ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31594,(0),null);\nvar _name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31594,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31594,(2),null);\nvar custom_printing_QMARK_ = (((!((value == null))))?(((((value.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === value.cljs$core$IPrintWithWriter$))))?true:false):false);\nvar type_markup = devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"instance-type-header-tag\",\"instance-type-header-tag\",-1015702989)], 0));\nvar fields = devtools.formatters.helpers.fetch_fields_values(value,basis);\nvar fields_markup = devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic(fields,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((custom_printing_QMARK_)?(0):null)], 0));\nvar fields_details_markup_fn = (function (){\nreturn devtools.formatters.markup._LT_fields_details_GT_(fields,value);\n});\nvar fields_preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-value-tag\",\"instance-value-tag\",-1739593896),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value,fields_markup,fields_details_markup_fn], 0))], null);\nvar custom_printing_markup = ((custom_printing_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-custom-printing-wrapper-tag\",\"instance-custom-printing-wrapper-tag\",1461890684),new cljs.core.Keyword(null,\"instance-custom-printing-background\",\"instance-custom-printing-background\",-248433646),devtools.formatters.markup.print_via_protocol(value,new cljs.core.Keyword(null,\"instance-custom-printing-tag\",\"instance-custom-printing-tag\",-67034432))], null):null);\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-header-tag\",\"instance-header-tag\",903623870),new cljs.core.Keyword(null,\"instance-header-background\",\"instance-header-background\",1510357287),fields_preview_markup,custom_printing_markup,type_markup], null);\n});\ndevtools.formatters.markup._LT_header_GT_ = (function devtools$formatters$markup$_LT_header_GT_(value){\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_preview_GT_(value)], 0));\n});\ndevtools.formatters.markup._LT_surrogate_header_GT_ = (function devtools$formatters$markup$_LT_surrogate_header_GT_(surrogate){\nvar or__4126__auto__ = devtools.formatters.templating.get_surrogate_header(surrogate);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn devtools.formatters.markup._LT_preview_GT_(devtools.formatters.templating.get_surrogate_target(surrogate));\n}\n});\ndevtools.formatters.markup._LT_surrogate_target_GT_ = (function devtools$formatters$markup$_LT_surrogate_target_GT_(surrogate){\nvar target = devtools.formatters.templating.get_surrogate_target(surrogate);\nif(cljs.core.seqable_QMARK_(target)){\nvar starting_index = devtools.formatters.templating.get_surrogate_start_index(surrogate);\nreturn devtools.formatters.markup._LT_details_GT_(target,starting_index);\n} else {\nreturn devtools.formatters.markup._LT_standard_body_reference_GT_(target);\n}\n});\ndevtools.formatters.markup._LT_surrogate_body_GT_ = (function devtools$formatters$markup$_LT_surrogate_body_GT_(surrogate){\nvar temp__5733__auto__ = devtools.formatters.templating.get_surrogate_body(surrogate);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar body = temp__5733__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"target\",\"target\",253001721),body)){\nreturn devtools.formatters.markup._LT_surrogate_target_GT_(surrogate);\n} else {\nreturn body;\n}\n} else {\nreturn null;\n}\n});\ndevtools.formatters.markup._LT_atomic_GT_ = (function devtools$formatters$markup$_LT_atomic_GT_(value){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-nils\",\"render-nils\",1360008699),value,cljs.core.nil_QMARK_))){\nreturn devtools.formatters.markup._LT_nil_GT_();\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-bools\",\"render-bools\",1793659724),value,devtools.formatters.helpers.bool_QMARK_))){\nreturn devtools.formatters.markup._LT_bool_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-strings\",\"render-strings\",-1497177335),value,cljs.core.string_QMARK_))){\nreturn devtools.formatters.markup._LT_string_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-numbers\",\"render-numbers\",-1385392009),value,cljs.core.number_QMARK_))){\nreturn devtools.formatters.markup._LT_number_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-keywords\",\"render-keywords\",1200455875),value,cljs.core.keyword_QMARK_))){\nreturn devtools.formatters.markup._LT_keyword_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-symbols\",\"render-symbols\",-887705016),value,cljs.core.symbol_QMARK_))){\nreturn devtools.formatters.markup._LT_symbol_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-instances\",\"render-instances\",-1803579686),value,devtools.formatters.helpers.should_render_instance_QMARK_))){\nreturn devtools.formatters.markup._LT_instance_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-types\",\"render-types\",-129927851),value,devtools.formatters.helpers.cljs_type_QMARK_))){\nreturn devtools.formatters.markup._LT_standalone_type_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-functions\",\"render-functions\",1273333002),value,devtools.formatters.helpers.cljs_function_QMARK_))){\nreturn devtools.formatters.markup._LT_function_GT_(value);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\ndevtools.formatters.markup.get_markup_db = (function devtools$formatters$markup$get_markup_db(){\nif((devtools.formatters.markup._STAR_markup_db_STAR_ == null)){\n(devtools.formatters.markup._STAR_markup_db_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"aligned-body\",\"aligned-body\",-2124118747),new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Keyword(null,\"protocol-method-arities\",\"protocol-method-arities\",-545542044),new cljs.core.Keyword(null,\"surrogate-header\",\"surrogate-header\",1705524526),new cljs.core.Keyword(null,\"details\",\"details\",1956795411),new cljs.core.Keyword(null,\"more-protocols\",\"more-protocols\",359555207),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),new cljs.core.Keyword(null,\"fields-details\",\"fields-details\",-269572714),new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),new cljs.core.Keyword(null,\"string\",\"string\",-1989541586),new cljs.core.Keyword(null,\"standard-body\",\"standard-body\",-1563020798),new cljs.core.Keyword(null,\"type-basis\",\"type-basis\",-1825246054),new cljs.core.Keyword(null,\"bool\",\"bool\",1444635321),new cljs.core.Keyword(null,\"standalone-type\",\"standalone-type\",-802565278),new cljs.core.Keyword(null,\"preview\",\"preview\",451279890),new cljs.core.Keyword(null,\"header\",\"header\",119441134),new cljs.core.Keyword(null,\"protocol-method\",\"protocol-method\",1794903206),new cljs.core.Keyword(null,\"cljs-land\",\"cljs-land\",1255896927),new cljs.core.Keyword(null,\"type-basis-item\",\"type-basis-item\",-1662150132),new cljs.core.Keyword(null,\"protocol-method-arities-details\",\"protocol-method-arities-details\",1944702118),new cljs.core.Keyword(null,\"fields-details-row\",\"fields-details-row\",2066344936),new cljs.core.Keyword(null,\"standard-body-reference\",\"standard-body-reference\",1513301561),new cljs.core.Keyword(null,\"surrogate-body\",\"surrogate-body\",-1618569585),new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"protocol-method-arity\",\"protocol-method-arity\",-1861927833),new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),new cljs.core.Keyword(null,\"type-details\",\"type-details\",477755178),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587),new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),new cljs.core.Keyword(null,\"surrogate\",\"surrogate\",2122284260),new cljs.core.Keyword(null,\"protocols-list\",\"protocols-list\",371434187),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"instance\",\"instance\",-2121349050),new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),new cljs.core.Keyword(null,\"function-details\",\"function-details\",1501147310),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),new cljs.core.Keyword(null,\"arities\",\"arities\",-1781122917),new cljs.core.Keyword(null,\"header-expander\",\"header-expander\",-1606368578),new cljs.core.Keyword(null,\"list-details\",\"list-details\",46031799),new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),new cljs.core.Keyword(null,\"surrogate-target\",\"surrogate-target\",-1262730220),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"number\",\"number\",1570378438),new cljs.core.Keyword(null,\"protocol-details\",\"protocol-details\",-121549824)],[devtools.formatters.markup._LT_aligned_body_GT_,devtools.formatters.markup._LT_native_reference_GT_,devtools.formatters.markup._LT_reference_surrogate_GT_,devtools.formatters.markup._LT_keyword_GT_,devtools.formatters.markup._LT_protocol_method_arities_GT_,devtools.formatters.markup._LT_surrogate_header_GT_,devtools.formatters.markup._LT_details_GT_,devtools.formatters.markup._LT_more_protocols_GT_,devtools.formatters.markup._LT_field_GT_,devtools.formatters.markup._LT_symbol_GT_,devtools.formatters.markup._LT_fields_details_GT_,devtools.formatters.markup._LT_atomic_GT_,devtools.formatters.markup._LT_string_GT_,devtools.formatters.markup._LT_standard_body_GT_,devtools.formatters.markup._LT_type_basis_GT_,devtools.formatters.markup._LT_bool_GT_,devtools.formatters.markup._LT_standalone_type_GT_,devtools.formatters.markup._LT_preview_GT_,devtools.formatters.markup._LT_header_GT_,devtools.formatters.markup._LT_protocol_method_GT_,devtools.formatters.markup._LT_cljs_land_GT_,devtools.formatters.markup._LT_type_basis_item_GT_,devtools.formatters.markup._LT_protocol_method_arities_details_GT_,devtools.formatters.markup._LT_fields_details_row_GT_,devtools.formatters.markup._LT_standard_body_reference_GT_,devtools.formatters.markup._LT_surrogate_body_GT_,devtools.formatters.markup._LT_expandable_GT_,devtools.formatters.markup._LT_type_GT_,devtools.formatters.markup._LT_protocol_method_arity_GT_,devtools.formatters.markup._LT_raw_surrogate_GT_,devtools.formatters.markup._LT_type_details_GT_,devtools.formatters.markup._LT_list_GT_,devtools.formatters.markup._LT_meta_wrapper_GT_,devtools.formatters.markup._LT_protocol_GT_,devtools.formatters.markup._LT_index_GT_,devtools.formatters.markup._LT_surrogate_GT_,devtools.formatters.markup._LT_protocols_list_GT_,devtools.formatters.markup._LT_meta_GT_,devtools.formatters.markup._LT_instance_GT_,devtools.formatters.markup._LT_reference_GT_,devtools.formatters.markup._LT_function_details_GT_,devtools.formatters.markup._LT_function_GT_,devtools.formatters.markup._LT_arities_GT_,devtools.formatters.markup._LT_header_expander_GT_,devtools.formatters.markup._LT_list_details_GT_,devtools.formatters.markup._LT_circular_reference_GT_,devtools.formatters.markup._LT_surrogate_target_GT_,devtools.formatters.markup._LT_fields_GT_,devtools.formatters.markup._LT_nil_GT_,devtools.formatters.markup._LT_body_GT_,devtools.formatters.markup._LT_number_GT_,devtools.formatters.markup._LT_protocol_details_GT_]));\n} else {\n}\n\nreturn devtools.formatters.markup._STAR_markup_db_STAR_;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/markup.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$emit-markup-db","~$devtools.formatters.markup"],"~:excludes",["~#set",[]],"~:macros",["^ ","^I",["^ ","~:arglists",["~#list",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","~:name","~$devtools.formatters.markup/emit-markup-db","~:ns","^J","~:macro",true]],"^P","^J","~:op","^R","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^W","~$devtools.formatters.printing","^X","~$devtools.formatters.state","^Y","~$devtools.formatters.templating","^Z","~$devtools.munging","^[","~$munging","^[","~$cljs.core","^11","~$goog","^12"],"~:seen",["^L",["~:require","~:require-macros"]],"~:uses",["^ ","~$expandable?","^W","~$should-render?","^W","~$set-managed-print-level","^Y","~$bool?","^W","~$cljs-instance?","^W","~$get-surrogate-body","^Z","~$get-constructor","^W","~$managed-print-via-writer","^X","~$pref","^W","~$wrap-arity","^W","~$cljs-function?","^W","~$get-more-marker","^W","~$fetch-fields-values","^W","~$managed-print-via-protocol","^X","~$abbreviated?","^W","~$get-surrogate-header","^Z","~$reset-depth-limits","^Y","~$get-surrogate-target","^Z","~$set-prevent-recursion","^Y","~$get-surrogate-start-index","^Z","~$abbreviate-long-string","^W","~$cljs-type?","^W","~$should-render-instance?","^W"],"^15",["^ ","^J","^J","^11","^11","^[","^[","^10","^["],"~:form",["^O",["~$ns","^J",["^O",["^15",["^J","~:refer",["^I"]]]],["^O",["^14",["^W","^1P",["^1:","^1A","^1L","^1;","^1M","^17","^1E","^1K","^1=","^1?","^18","^1B","^1@","^1C"]],["^X","^1P",["^1>","^1D"]],["^Y","^1P",["^1I","^19","^1G"]],["^Z","^1P",["^1<","^1H","^1J","^1F"]],["^[","~:as","^10"]]]]],"~:flags",["^ ","^15",["^L",[]],"^14",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^12","^11","^W","^X","^Y","^Z","^["]],"^R","^J","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/markup.cljs"],"~:compiled-at",1611325008107,"~:resource-name","devtools/formatters/markup.cljs","~:warnings",[],"~:source","(ns devtools.formatters.markup\n  (:require-macros [devtools.formatters.markup :refer [emit-markup-db]])\n  (:require [devtools.formatters.helpers :refer [bool? cljs-function? cljs-type? cljs-instance?\n                                                 should-render-instance? expandable? abbreviated?\n                                                 abbreviate-long-string get-constructor pref should-render?\n                                                 get-more-marker wrap-arity fetch-fields-values]]\n            [devtools.formatters.printing :refer [managed-print-via-writer managed-print-via-protocol]]\n            [devtools.formatters.state :refer [set-prevent-recursion set-managed-print-level reset-depth-limits]]\n            [devtools.formatters.templating :refer [get-surrogate-body\n                                                    get-surrogate-target\n                                                    get-surrogate-start-index\n                                                    get-surrogate-header]]\n            [devtools.munging :as munging]))\n\n; reusable hiccup-like templates\n\n(declare get-markup-db)\n\n; -- cljs printing  ---------------------------------------------------------------------------------------------------------\n\n(defn print-with [method value tag & [max-level]]\n  (let [job-fn #(method value tag (get-markup-db))]\n    (if (some? max-level)\n      (binding [*print-level* (inc max-level)]                                                                                ; when printing do at most print-level deep recursion\n        (job-fn))\n      (job-fn))))\n\n(defn print-via-writer [value tag & [max-level]]\n  (print-with managed-print-via-writer value tag max-level))\n\n(defn print-via-protocol [value tag & [max-level]]\n  (print-with managed-print-via-protocol value tag max-level))\n\n; -- references -------------------------------------------------------------------------------------------------------------\n\n(defn <expandable> [& children]\n  (let [inner-markup (concat [:expandable-inner-tag] children)]\n    [:expandable-tag :expandable-symbol inner-markup]))\n\n(defn <raw-surrogate> [& args]\n  (concat [\"surrogate\"] args))\n\n(defn <surrogate> [& [object header body start-index]]\n  (let [header (if (some? body) (<expandable> header) header)]\n    (<raw-surrogate> object header body start-index)))\n\n(defn <reference> [& args]\n  (concat [\"reference\"] args))\n\n(defn <reference-surrogate> [& args]\n  (<reference> (apply <surrogate> args)))\n\n(defn <circular-reference> [& children]\n  (<reference-surrogate> nil [:circular-reference-tag :circular-ref-icon] (concat [:circular-reference-body-tag] children)))\n\n(defn <native-reference> [object]\n  (let [reference (<reference> object #(set-prevent-recursion % true))]\n    [:native-reference-wrapper-tag :native-reference-background [:native-reference-tag reference]]))\n\n(defn <header-expander> [object]\n  (<reference> (<raw-surrogate> object :header-expander-symbol :target) reset-depth-limits))\n\n; -- simple markup ----------------------------------------------------------------------------------------------------------\n\n(defn <cljs-land> [& children]\n  (concat [:cljs-land-tag] children))\n\n(defn <nil> []\n  ; this code is duplicated in templating.cljs, see make-reference\n  [:nil-tag :nil-label])\n\n(defn <bool> [bool]\n  [:bool-tag (str bool)])\n\n(defn <keyword> [keyword]\n  [:keyword-tag (str keyword)])\n\n(defn <symbol> [symbol]\n  [:symbol-tag (str symbol)])\n\n(defn <number> [number]\n  (if (integer? number)\n    [:integer-tag number]\n    [:float-tag number]))\n\n; -- string markup ----------------------------------------------------------------------------------------------------------\n\n(defn <string> [string]\n  (let [dq (pref :dq)\n        re-nl (js/RegExp. \"\\n\" \"g\")\n        nl-marker (pref :new-line-string-replacer)\n        inline-string (.replace string re-nl nl-marker)\n        max-inline-string-size (+ (pref :string-prefix-limit) (pref :string-postfix-limit))\n        quote-string (fn [s] (str dq s dq))\n        should-abbreviate? (> (count inline-string) max-inline-string-size)]\n    (if should-abbreviate?\n      (let [abbreviated-string (abbreviate-long-string inline-string\n                                                       (pref :string-abbreviation-marker)\n                                                       (pref :string-prefix-limit)\n                                                       (pref :string-postfix-limit))\n            abbreviated-string-markup [:string-tag (quote-string abbreviated-string)]\n            string-with-nl-markers (.replace string re-nl (str nl-marker \"\\n\"))\n            details-markup [:expanded-string-tag string-with-nl-markers]]\n        (<reference-surrogate> string abbreviated-string-markup details-markup))\n      [:string-tag (quote-string inline-string)])))\n\n; -- generic preview markup -------------------------------------------------------------------------------------------------\n\n(defn <preview> [value]\n  (print-via-writer value :header-tag (pref :max-print-level)))\n\n; -- body-related templates -------------------------------------------------------------------------------------------------\n\n(defn <body> [markup]\n  [:body-tag markup])\n\n(defn <aligned-body> [markups-lists]\n  (let [prepend-li-tag (fn [line]\n                         (if line\n                           (concat [:aligned-li-tag] line)))\n        aligned-lines (keep prepend-li-tag markups-lists)]\n    (<body> (concat [:standard-ol-no-margin-tag] aligned-lines))))\n\n(defn <standard-body> [markups-lists & [no-margin?]]\n  (let [ol-tag (if no-margin? :standard-ol-no-margin-tag :standard-ol-tag)\n        li-tag (if no-margin? :standard-li-no-margin-tag :standard-li-tag)\n        prepend-li-tag (fn [line]\n                         (if line\n                           (concat [li-tag] line)))\n        lines-markups (keep prepend-li-tag markups-lists)]\n    (concat [ol-tag] lines-markups)))\n\n(defn <standard-body-reference> [o]\n  (<standard-body> [[(<reference> o)]]))\n\n; -- generic details markup -------------------------------------------------------------------------------------------------\n\n(defn <index> [value]\n  [:index-tag value :line-index-separator])\n\n(defn- body-line [index value]\n  (let [index-markup (<index> index)\n        value-markup (print-via-writer value :item-tag (pref :body-line-max-print-level))]\n    [index-markup value-markup]))\n\n; TODO: this fn is screaming for rewrite\n(defn- prepare-body-lines [data starting-index]\n  (loop [work data\n         index starting-index\n         lines []]\n    (if (empty? work)\n      lines\n      (recur (rest work) (inc index) (conj lines (body-line index (first work)))))))\n\n(defn- body-lines [value starting-index]\n  (let [seq (seq value)\n        max-number-body-items (pref :max-number-body-items)\n        chunk (take max-number-body-items seq)\n        rest (drop max-number-body-items seq)\n        lines (prepare-body-lines chunk starting-index)\n        continue? (not (empty? (take 1 rest)))]\n    (if-not continue?\n      lines\n      (let [more-label-markup [:body-items-more-tag :body-items-more-label]\n            start-index (+ starting-index max-number-body-items)\n            more-markup (<reference-surrogate> rest more-label-markup :target start-index)]\n        (conj lines [more-markup])))))\n\n(defn <details> [value starting-index]\n  (let [has-continuation? (pos? starting-index)\n        body-markup (<standard-body> (body-lines value starting-index) has-continuation?)]\n    (if has-continuation?\n      body-markup\n      (<body> body-markup))))\n\n; -- generic list template --------------------------------------------------------------------------------------------------\n\n(defn <list-details> [items _opts]\n  (<aligned-body> (map list items)))\n\n(defn <list> [items max-count & [opts]]\n  (let [items-markups (take max-count items)\n        more-count (- (count items) max-count)\n        more? (pos? more-count)\n        separator (or (:separator opts) :list-separator)\n        more-symbol (if more?\n                      (if-let [more-symbol (:more-symbol opts)]\n                        (if (fn? more-symbol)\n                          (more-symbol more-count)\n                          more-symbol)\n                        (get-more-marker more-count)))\n        preview-markup (concat [(or (:tag opts) :list-tag)\n                                (or (:open-symbol opts) :list-open-symbol)]\n                               (interpose separator items-markups)\n                               (if more? [separator more-symbol])\n                               [(or (:close-symbol opts) :list-close-symbol)])]\n    (if more?\n      (let [details-markup (:details opts)\n            default-details-fn (partial <list-details> items opts)]\n        (<reference-surrogate> nil preview-markup (or details-markup default-details-fn)))\n      preview-markup)))\n\n; -- mete-related markup ----------------------------------------------------------------------------------------------------\n\n(defn <meta> [metadata]\n  (let [body-fn (fn [] [:meta-body-tag (<preview> metadata)])\n        header [:meta-header-tag \"meta\"]]\n    [:meta-reference-tag (<reference-surrogate> metadata header body-fn)]))                                                   ; body must be lazy, see #35\n\n(defn <meta-wrapper> [metadata & children]\n  (concat [:meta-wrapper-tag] children [(<meta> metadata)]))\n\n; -- function markup --------------------------------------------------------------------------------------------------------\n\n(defn <function-details> [fn-obj ns _name arities prefix]\n  {:pre [(fn? fn-obj)]}\n  (let [arities (map wrap-arity arities)\n        make-arity-markup-list (fn [arity]\n                                 [[:fn-multi-arity-args-indent-tag prefix]\n                                  [:fn-args-tag arity]])\n        arities-markupts-lists (if (> (count arities) 1) (map make-arity-markup-list arities))\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        native-markups-list [:native-icon (<native-reference> fn-obj)]]\n    (<aligned-body> (concat arities-markupts-lists [ns-markups-list native-markups-list]))))\n\n(defn <arities> [arities]\n  (let [multi-arity? (> (count arities) 1)]\n    [:fn-args-tag (wrap-arity (if multi-arity?\n                                (pref :multi-arity-symbol)\n                                (first arities)))]))\n\n(defn <function> [fn-obj]\n  {:pre [(fn? fn-obj)]}\n  (let [[ns name] (munging/parse-fn-info fn-obj)\n        lambda? (empty? name)\n        spacer-symbol (pref :spacer)\n        rest-symbol (pref :rest-symbol)\n        multi-arity-symbol (pref :multi-arity-symbol)\n        arities (munging/extract-arities fn-obj true spacer-symbol multi-arity-symbol rest-symbol)\n        arities-markup (<arities> arities)\n        name-markup (if-not lambda? [:fn-name-tag name])\n        icon-markup (if lambda? :lambda-icon :fn-icon)\n        prefix-markup [:fn-prefix-tag icon-markup name-markup]\n        preview-markup [:fn-header-tag prefix-markup arities-markup]\n        details-fn (partial <function-details> fn-obj ns name arities prefix-markup)]\n    (<reference-surrogate> fn-obj preview-markup details-fn)))\n\n; -- type markup ------------------------------------------------------------------------------------------------------------\n\n(defn <type-basis-item> [basis-item]\n  [:type-basis-item-tag (name basis-item)])\n\n(defn <type-basis> [basis]\n  (let [item-markups (map <type-basis-item> basis)\n        children-markups (interpose :type-basis-item-separator item-markups)]\n    (concat [:type-basis-tag] children-markups)))\n\n(defn <type-details> [constructor-fn ns _name basis]\n  (let [ns-markup (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        basis-markup (if (empty? basis)\n                       [:empty-basis-symbol]\n                       [:basis-icon (<type-basis> basis)])\n        native-markup [:native-icon (<native-reference> constructor-fn)]]\n    (<aligned-body> [basis-markup ns-markup native-markup])))\n\n(defn <type> [constructor-fn & [header-tag]]\n  (let [[ns name basis] (munging/parse-constructor-info constructor-fn)\n        name-markup [:type-name-tag name]\n        preview-markup [(or header-tag :type-header-tag) :type-symbol name-markup]\n        details-markup-fn (partial <type-details> constructor-fn ns name basis)]\n    [:type-wrapper-tag\n     :type-header-background\n     [:type-ref-tag (<reference-surrogate> constructor-fn preview-markup details-markup-fn)]]))\n\n(defn <standalone-type> [constructor-fn & [header-tag]]\n  [:standalone-type-tag (<type> constructor-fn header-tag)])\n\n; -- protocols markup -------------------------------------------------------------------------------------------------------\n\n(defn <protocol-method-arity> [arity-fn]\n  (<reference> arity-fn))\n\n(defn <protocol-method-arities-details> [fns]\n  (<aligned-body> (map <protocol-method-arity> fns)))\n\n(defn <protocol-method-arities> [fns & [max-fns]]\n  (let [max-fns (or max-fns (pref :max-protocol-method-arities-list))\n        more? (> (count fns) max-fns)\n        aritites-markups (map <protocol-method-arity> (take max-fns fns))\n        preview-markup (concat [:protocol-method-arities-header-tag :protocol-method-arities-header-open-symbol]\n                               (interpose :protocol-method-arities-list-header-separator aritites-markups)\n                               (if more? [:protocol-method-arities-more-symbol])\n                               [:protocol-method-arities-header-close-symbol])]\n    (if more?\n      (let [details-markup-fn (partial <protocol-method-arities-details> fns)]\n        (<reference-surrogate> nil preview-markup details-markup-fn))\n      preview-markup)))\n\n(defn <protocol-method> [name arities]\n  [:protocol-method-tag\n   :method-icon\n   [:protocol-method-name-tag name]\n   (<protocol-method-arities> arities)])\n\n(defn <protocol-details> [obj ns _name selector _fast?]\n  (let [protocol-obj (munging/get-protocol-object selector)\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:protocol-ns-name-tag ns]])\n        native-markups-list (if (some? protocol-obj) [:native-icon (<native-reference> protocol-obj)])\n        methods (munging/collect-protocol-methods obj selector)\n        methods-markups (map (fn [[name arities]] (<protocol-method> name arities)) methods)\n        methods-markups-lists (map list methods-markups)]\n    (<aligned-body> (concat methods-markups-lists [ns-markups-list native-markups-list]))))\n\n(defn <protocol> [obj protocol & [tag]]\n  (let [{:keys [ns name selector fast?]} protocol\n        preview-markup [(or tag :protocol-name-tag) name]\n        prefix-markup [(if fast? :fast-protocol-tag :slow-protocol-tag) :protocol-background]]\n    (if (some? obj)\n      (let [details-markup-fn (partial <protocol-details> obj ns name selector fast?)]\n        (conj prefix-markup (<reference-surrogate> obj preview-markup details-markup-fn)))\n      (conj prefix-markup preview-markup))))\n\n(defn <more-protocols> [more-count]\n  (let [fake-protocol {:name (get-more-marker more-count)}]\n    (<protocol> nil fake-protocol :protocol-more-tag)))\n\n(defn <protocols-list> [obj protocols & [max-protocols]]\n  (let [max-protocols (or max-protocols (pref :max-list-protocols))\n        protocols-markups (map (partial <protocol> obj) protocols)]\n    (<list> protocols-markups max-protocols {:tag          :protocols-header-tag\n                                             :open-symbol  :protocols-list-open-symbol\n                                             :close-symbol :protocols-list-close-symbol\n                                             :separator    :header-protocol-separator\n                                             :more-symbol  <more-protocols>})))\n\n; -- instance fields markup -------------------------------------------------------------------------------------------------\n\n(defn <field> [name value]\n  [:header-field-tag\n   [:header-field-name-tag (str name)]\n   :header-field-value-spacer\n   [:header-field-value-tag (<reference> (<surrogate> value) #(set-managed-print-level % 1))]\n   :header-field-separator])\n\n(defn <fields-details-row> [field]\n  (let [[name value] field]\n    [:body-field-tr-tag\n     [:body-field-td1-tag\n      :body-field-symbol\n      [:body-field-name-tag (str name)]]\n     [:body-field-td2-tag\n      :body-field-value-spacer]\n     [:body-field-td3-tag\n      [:body-field-value-tag (<reference-surrogate> value)]]]))\n\n(defn <fields> [fields & [max-fields]]\n  (if (zero? (count fields))\n    [:fields-header-tag :fields-header-no-fields-symbol]\n    (let [max-fields (or max-fields (pref :max-instance-header-fields))\n          more? (> (count fields) max-fields)\n          fields-markups (map (fn [[name value]] (<field> name value)) (take max-fields fields))]\n      (concat [:fields-header-tag\n               :fields-header-open-symbol]\n              fields-markups\n              [(if more? :more-fields-symbol)\n               :fields-header-close-symbol]))))\n\n(defn <fields-details> [fields obj]\n  (let [protocols (munging/scan-protocols obj)\n        has-protocols? (not (empty? protocols))\n        fields-markup (if-not (zero? (count fields))\n                        [:fields-icon (concat [:instance-body-fields-table-tag] (map <fields-details-row> fields))])\n        protocols-list-markup (if has-protocols? [:protocols-icon (<protocols-list> obj protocols)])\n        native-markup [:native-icon (<native-reference> obj)]]\n    (<aligned-body> [fields-markup protocols-list-markup native-markup])))\n\n; -- type/record instance markup --------------------------------------------------------------------------------------------\n\n(defn <instance> [value]\n  (let [constructor-fn (get-constructor value)\n        [_ns _name basis] (munging/parse-constructor-info constructor-fn)\n        custom-printing? (implements? IPrintWithWriter value)\n        type-markup (<type> constructor-fn :instance-type-header-tag)\n        fields (fetch-fields-values value basis)\n        fields-markup (<fields> fields (if custom-printing? 0))\n        fields-details-markup-fn #(<fields-details> fields value)\n        fields-preview-markup [:instance-value-tag (<reference-surrogate> value fields-markup fields-details-markup-fn)]\n        custom-printing-markup (if custom-printing?\n                                 [:instance-custom-printing-wrapper-tag\n                                  :instance-custom-printing-background\n                                  (print-via-protocol value :instance-custom-printing-tag)])]\n    [:instance-header-tag\n     :instance-header-background\n     fields-preview-markup\n     custom-printing-markup\n     type-markup]))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <header> [value]\n  (<cljs-land> (<preview> value)))\n\n(defn <surrogate-header> [surrogate]\n  (or (get-surrogate-header surrogate)\n      (<preview> (get-surrogate-target surrogate))))\n\n(defn <surrogate-target> [surrogate]\n  (let [target (get-surrogate-target surrogate)]\n    (if (seqable? target)\n      (let [starting-index (get-surrogate-start-index surrogate)]\n        (<details> target starting-index))\n      (<standard-body-reference> target))))\n\n(defn <surrogate-body> [surrogate]\n  (if-let [body (get-surrogate-body surrogate)]\n    (if (= :target body)\n      (<surrogate-target> surrogate)\n      body)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <atomic> [value]\n  (cond\n    (should-render? :render-nils value nil?) (<nil>)\n    (should-render? :render-bools value bool?) (<bool> value)\n    (should-render? :render-strings value string?) (<string> value)\n    (should-render? :render-numbers value number?) (<number> value)\n    (should-render? :render-keywords value keyword?) (<keyword> value)\n    (should-render? :render-symbols value symbol?) (<symbol> value)\n    (should-render? :render-instances value should-render-instance?) (<instance> value)\n    (should-render? :render-types value cljs-type?) (<standalone-type> value)\n    (should-render? :render-functions value cljs-function?) (<function> value)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(def ^:dynamic *markup-db*)\n\n; emit-markup-db macro will generate a map of all markup <functions> in this namespace:\n;\n;    {:atomic              <atomic>\n;     :reference           <reference>\n;     :native-reference    <native-reference>\n;     ...}\n;\n; we generate it only on first call and cache it in *markup-db*\n; emitting markup db statically into def would prevent dead-code elimination\n;\n(defn get-markup-db []\n  (if (nil? *markup-db*)\n    (set! *markup-db* (emit-markup-db)))\n  *markup-db*)\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","devtools.formatters.markup/print-with","p__31333","vec__31334","cljs.core.nth","seq31329","G__31330","cljs.core/first","cljs.core/next","G__31331","G__31332","self__4723__auto__","method","value","tag","max-level","job-fn","G__31337","G__31338","G__31339","devtools.formatters.markup/get-markup-db","*print-level*-orig-val__31340","*print-level*-temp-val__31341","cljs.core/*print-level*","devtools.formatters.markup/print-via-writer","p__31354","vec__31355","seq31342","G__31343","G__31344","devtools.formatters.markup.print_with","devtools.formatters.printing/managed-print-via-writer","devtools.formatters.markup/print-via-protocol","p__31364","vec__31365","seq31361","G__31362","G__31363","devtools.formatters.printing/managed-print-via-protocol","devtools.formatters.markup/<expandable>","seq31368","self__4724__auto__","cljs.core/seq","children","inner-markup","cljs.core.concat","devtools.formatters.markup/<raw-surrogate>","seq31398","args","devtools.formatters.markup/<surrogate>","p__31429","vec__31430","seq31399","object","header","body","start-index","devtools.formatters.markup._LT_expandable_GT_","devtools.formatters.markup._LT_raw_surrogate_GT_","devtools.formatters.markup/<reference>","seq31433","devtools.formatters.markup/<reference-surrogate>","seq31440","devtools.formatters.markup._LT_reference_GT_","cljs.core.apply","devtools.formatters.markup/<circular-reference>","seq31453","devtools.formatters.markup._LT_reference_surrogate_GT_","devtools.formatters.markup/<native-reference>","reference","p1__31465#","devtools.formatters.state/set-prevent-recursion","devtools.formatters.markup/<header-expander>","devtools.formatters.state/reset-depth-limits","devtools.formatters.markup/<cljs-land>","seq31478","devtools.formatters.markup/<nil>","devtools.formatters.markup/<bool>","bool","devtools.formatters.markup/<keyword>","keyword","devtools.formatters.markup/<symbol>","symbol","devtools.formatters.markup/<number>","number","cljs.core/integer?","devtools.formatters.markup/<string>","string","dq","devtools.formatters.helpers/pref","re-nl","js/RegExp","nl-marker","inline-string","max-inline-string-size","quote-string","s","should-abbreviate?","cljs.core/count","abbreviated-string","devtools.formatters.helpers/abbreviate-long-string","abbreviated-string-markup","string-with-nl-markers","details-markup","devtools.formatters.markup/<preview>","devtools.formatters.markup.print_via_writer","devtools.formatters.markup/<body>","markup","devtools.formatters.markup/<aligned-body>","markups-lists","prepend-li-tag","line","aligned-lines","cljs.core.keep","devtools.formatters.markup/<standard-body>","p__31495","vec__31496","seq31493","G__31494","no-margin?","ol-tag","li-tag","lines-markups","devtools.formatters.markup/<standard-body-reference>","o","devtools.formatters.markup/<index>","devtools.formatters.markup/body-line","index","index-markup","value-markup","devtools.formatters.markup/prepare-body-lines","data","starting-index","work","lines","cljs.core/empty?","cljs.core/rest","cljs.core.conj","devtools.formatters.markup/body-lines","seq","max-number-body-items","chunk","cljs.core.take","rest","cljs.core.drop","continue?","more-label-markup","more-markup","devtools.formatters.markup/<details>","has-continuation?","body-markup","devtools.formatters.markup._LT_standard_body_GT_","devtools.formatters.markup/<list-details>","items","_opts","cljs.core.map","cljs.core/list","devtools.formatters.markup/<list>","p__31503","vec__31504","seq31499","G__31500","G__31501","max-count","opts","items-markups","more-count","more?","separator","or__4126__auto__","more-symbol","temp__5733__auto__","cljs.core/fn?","devtools.formatters.helpers/get-more-marker","preview-markup","cljs.core.interpose","default-details-fn","cljs.core.partial","devtools.formatters.markup/<meta>","metadata","body-fn","devtools.formatters.markup/<meta-wrapper>","seq31508","G__31509","js/Error","devtools.formatters.markup/<function-details>","fn-obj","ns","_name","arities","prefix","devtools.formatters.helpers/wrap-arity","make-arity-markup-list","arity","arities-markupts-lists","ns-markups-list","native-markups-list","devtools.formatters.markup/<arities>","multi-arity?","devtools.formatters.markup/<function>","vec__31532","name","devtools.munging/parse-fn-info","lambda?","spacer-symbol","rest-symbol","multi-arity-symbol","devtools.munging/extract-arities","arities-markup","name-markup","icon-markup","prefix-markup","details-fn","devtools.formatters.markup/<type-basis-item>","basis-item","cljs.core/name","devtools.formatters.markup/<type-basis>","basis","item-markups","children-markups","devtools.formatters.markup/<type-details>","constructor-fn","ns-markup","basis-markup","native-markup","devtools.formatters.markup/<type>","p__31541","vec__31542","seq31539","G__31540","header-tag","vec__31545","devtools.munging/parse-constructor-info","details-markup-fn","devtools.formatters.markup/<standalone-type>","p__31550","vec__31551","seq31548","G__31549","devtools.formatters.markup._LT_type_GT_","devtools.formatters.markup/<protocol-method-arity>","arity-fn","devtools.formatters.markup/<protocol-method-arities-details>","fns","devtools.formatters.markup/<protocol-method-arities>","p__31556","vec__31557","seq31554","G__31555","max-fns","aritites-markups","devtools.formatters.markup/<protocol-method>","devtools.formatters.markup/<protocol-details>","obj","selector","_fast?","protocol-obj","devtools.munging/get-protocol-object","methods","devtools.munging/collect-protocol-methods","methods-markups","p__31560","vec__31561","methods-markups-lists","devtools.formatters.markup/<protocol>","p__31567","vec__31568","seq31564","G__31565","G__31566","protocol","map__31571","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","fast?","devtools.formatters.markup/<more-protocols>","fake-protocol","devtools.formatters.markup._LT_protocol_GT_","devtools.formatters.markup/<protocols-list>","p__31576","vec__31577","seq31573","G__31574","G__31575","protocols","max-protocols","protocols-markups","devtools.formatters.markup._LT_list_GT_","devtools.formatters.markup/<field>","p1__31580#","devtools.formatters.markup._LT_surrogate_GT_","devtools.formatters.state/set-managed-print-level","devtools.formatters.markup/<fields-details-row>","field","vec__31581","devtools.formatters.markup/<fields>","p__31586","vec__31587","seq31584","G__31585","fields","max-fields","fields-markups","p__31590","vec__31591","devtools.formatters.markup/<fields-details>","devtools.munging/scan-protocols","has-protocols?","fields-markup","protocols-list-markup","devtools.formatters.markup/<instance>","vec__31594","devtools.formatters.helpers/get-constructor","_ns","custom-printing?","type-markup","devtools.formatters.helpers/fetch-fields-values","devtools.formatters.markup._LT_fields_GT_","fields-details-markup-fn","fields-preview-markup","custom-printing-markup","devtools.formatters.markup/<header>","devtools.formatters.markup._LT_cljs_land_GT_","devtools.formatters.markup/<surrogate-header>","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-target","devtools.formatters.markup/<surrogate-target>","target","cljs.core/seqable?","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.markup/<surrogate-body>","devtools.formatters.templating/get-surrogate-body","cljs.core._EQ_","devtools.formatters.markup/<atomic>","devtools.formatters.helpers/should-render?","cljs.core/nil?","devtools.formatters.helpers/bool?","cljs.core/string?","cljs.core/number?","cljs.core/keyword?","cljs.core/symbol?","devtools.formatters.helpers/should-render-instance?","devtools.formatters.helpers/cljs-type?","devtools.formatters.helpers/cljs-function?","devtools.formatters.markup/*markup-db*","cljs.core/PersistentHashMap"]],"~:used-vars",["^L",["~$devtools.formatters.markup/<type-basis-item>","~$devtools.formatters.markup/<cljs-land>","~$devtools.formatters.printing/managed-print-via-protocol","~$cljs.core/rest","~$cljs.core/PersistentHashMap","~$devtools.formatters.markup/<standalone-type>","~$cljs.core/*print-level*","~$cljs.core/keyword?","~$devtools.formatters.markup/<string>","~$devtools.formatters.markup/body-lines","~$devtools.formatters.markup/<atomic>","~$devtools.formatters.markup/body-line","~$devtools.formatters.markup/<fields-details>","~$devtools.formatters.markup/<surrogate-body>","~$devtools.formatters.markup/<header-expander>","~$cljs.core/=","~$devtools.formatters.printing/managed-print-via-writer","~$devtools.formatters.markup/<type-basis>","~$devtools.formatters.markup/<fields-details-row>","~$devtools.formatters.markup/<standard-body>","~$devtools.formatters.markup/<arities>","~$devtools.formatters.helpers/should-render-instance?","~$devtools.formatters.helpers/cljs-type?","~$cljs.core/count","~$cljs.core/seq","~$cljs.core/apply","~$devtools.formatters.markup/<preview>","~$devtools.formatters.helpers/cljs-function?","~$devtools.formatters.markup/<surrogate>","~$cljs.core/string?","~$devtools.formatters.markup/get-markup-db","~$cljs.core/concat","~$devtools.formatters.markup/<symbol>","~$devtools.formatters.markup/<protocol-method-arities-details>","~$devtools.formatters.markup/<standard-body-reference>","~$devtools.formatters.markup/<type-details>","~$devtools.formatters.markup/<protocol-method-arity>","~$devtools.formatters.markup/<type>","~$devtools.formatters.markup/<surrogate-header>","~$cljs.core/empty?","~$devtools.formatters.state/reset-depth-limits","~$cljs.core/conj","~$devtools.formatters.markup/<more-protocols>","~$devtools.formatters.markup/*markup-db*","~$devtools.formatters.markup/<protocols-list>","~$cljs.core/map","~$devtools.formatters.markup/<index>","~$cljs.core/fn?","~$devtools.formatters.markup/<protocol>","~$devtools.formatters.templating/get-surrogate-target","~$devtools.formatters.markup/<instance>","~$devtools.formatters.helpers/bool?","~$devtools.formatters.markup/<meta>","~$cljs.core/number?","~$cljs.core/integer?","~$devtools.formatters.markup/<reference>","~$devtools.formatters.helpers/pref","~$devtools.formatters.markup/<function-details>","~$devtools.formatters.markup/<bool>","~$devtools.formatters.markup/print-with","~$devtools.formatters.helpers/wrap-arity","~$devtools.formatters.markup/print-via-protocol","~$cljs.core/nil?","~$devtools.formatters.markup/<function>","~$devtools.formatters.markup/<nil>","~$devtools.formatters.markup/<circular-reference>","~$devtools.formatters.markup/<header>","~$devtools.formatters.markup/<protocol-method>","~$devtools.formatters.markup/<expandable>","~$devtools.formatters.markup/<body>","~$devtools.formatters.markup/<fields>","~$cljs.core/not","~$devtools.formatters.markup/<surrogate-target>","~$devtools.formatters.markup/prepare-body-lines","~$cljs.core/seqable?","~$cljs.core/symbol?","~$devtools.formatters.markup/<protocol-details>","~$devtools.formatters.markup/<native-reference>","~$devtools.formatters.state/set-managed-print-level","~$devtools.formatters.markup/<number>","~$devtools.formatters.markup/<reference-surrogate>","~$devtools.formatters.markup/<keyword>","~$devtools.formatters.markup/<list>","~$devtools.formatters.markup/<meta-wrapper>","~$cljs.core/first","~$devtools.formatters.markup/<protocol-method-arities>","~$devtools.formatters.markup/<raw-surrogate>","~$devtools.formatters.markup/<list-details>","~$cljs.core/list","~$devtools.formatters.markup/print-via-writer","~$devtools.formatters.markup/<aligned-body>","~$cljs.core/name","~$js/Error","~$devtools.formatters.helpers/should-render?","~$devtools.formatters.markup/<details>","~$devtools.formatters.markup/<field>"]]],"~:cache-keys",["~#cmap",[["^1V","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["^12","~$goog.dom.HtmlElement"]]],["^1V","devtools/formatters/printing.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","~$devtools.prefs","~$devtools.format","~$devtools.protocols","^Y","^W"]]],["^1V","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","~$goog.labs.userAgent.util","~$goog.string"]]],["^1V","devtools/formatters/markup.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","^W","^X","^Y","^Z","^["]]],["^1V","devtools/formatters/helpers.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","^4E","^[","^4F","^4G"]]],["^1V","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","~$goog.array","~$goog.asserts"]]],["^1V","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4J","^4H","~$goog.object","~$goog.string.internal"]]],["^1V","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4K","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4M"]]],["^1V","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4K"]]],["^1V","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^4H","~$goog.reflect","^4I"]]],["^1V","devtools/formatters/templating.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","~$clojure.walk","~$devtools.util","^4G","^W","^Y","~$clojure.string"]]],["^1V","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","cljs/pprint.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","^4Z","^4I","~$goog.string.StringBuffer"]]],["^1V","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4K"]]],"~:SHADOW-TIMESTAMP",[1611324937000,1611324937000,1611090469000],["^1V","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4K","^4W"]]],["^1V","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4K","~$goog.html.trustedtypes","^4P","^4Q","^4R","^4S"]]],["^1V","devtools/version.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11"]]],["^1V","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4J","^4K","~$goog.html.SafeUrl","^4R","^4S","^4M"]]],["^1V","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4K","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^52","^4O","~$goog.html.uncheckedconversions","^4R","^4M"]]],["^1V","devtools/prefs.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","~$devtools.defaults"]]],["^1V","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11"]]],["^1V","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1V","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4J","^4K","~$goog.dom.TagName","~$goog.dom.tags","^56","^57","~$goog.html.SafeStyleSheet","^52","^4O","^51","^4P","^4Q","^4T","^4L","^4R","^4S","^4M"]]],["^1V","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4L"]]],["^1V","devtools/munging.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","^4Z","~$devtools.context","^4L","^4["]]],["^1V","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4J","^4H","^4I"]]],["^1V","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1V","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4J","^4K","^4I","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1V","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",[]]],["^1V","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4J","^4L"]]],["^1V","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","^4I","^4["]]],["^1V","devtools/formatters/state.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11"]]],["^1V","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","~$goog.dom.safe","^58","^4R","^4M"]]],["^1V","clojure/data.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","~$clojure.set"]]],["^1V","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4M"]]],["^1V","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4J","^4K","^54","~$goog.math"]]],["^1V","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4K","^55","^56","^57","^5>","^52","^4O","^4R","^4M"]]],["^1V","devtools/defaults.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11"]]],["^1V","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12"]]],["^1V","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","~$goog.math.Long","~$goog.math.Integer","^4I","^4L","^4J","~$goog.Uri","^4["]]],["^1V","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4K","^51","^4R","^4S"]]],["^1V","devtools/context.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11"]]],["^1V","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4J","^4K","^57","^4L","^4R","^4S","^4M"]]],["^1V","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4W"]]],["^1V","devtools/format.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","^5?"]]],["^1V","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11"]]],["^1V","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4J","^4K","^4I"]]],["^1V","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^4K","^4S"]]],["^1V","devtools/protocols.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11"]]],["^1V","devtools/util.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4@",["^ ","^4A",null,"^4B",["^L",[]],"^4C",["^12","^11","~$goog.userAgent","~$clojure.data","~$devtools.version","^5?","^?","^4E"]]]]],"~:clj-info",["^ ","jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/logging.clj",1611090478000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/types.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/oops.clj",1611324935000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1611090469000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/report.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/version.clj",1611324935000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/munging.clj",1611324935000,"jar:file:/home/cesar/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1611087324000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/core.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1611090468000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/read.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1611090468000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coerce.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/pprint.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1611090468000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/formatters/markup.clj",1611324935000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1611090469000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/prefs.clj",1611324935000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1611090469000,"jar:file:/home/cesar/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1611090468000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/compiler.clj",1611324935000,"jar:file:/home/cesar/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1610808289000,"jar:file:/home/cesar/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1611090468000,"jar:file:/home/cesar/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coercers.cljc",1611090478000,"jar:file:/home/cesar/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/defaults.clj",1611324935000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",["^ ","^I","^J"],"^K",["^L",[]],"^M",["^ ","^I",["^ ","^N",["^O",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","^P","^Q","^R","^J","^S",true]],"^P","^J","^U",null,"^V",["^ ","^W","^W","^X","^X","^Y","^Y","^Z","^Z","^[","^[","^10","^[","^11","^11","^12","^12"],"^13",["^L",["^14","^15"]],"~:shadow/js-access-global",["^L",["RegExp","Error"]],"^16",["^ ","^17","^W","^18","^W","^19","^Y","^1:","^W","^1;","^W","^1<","^Z","^1=","^W","^1>","^X","^1?","^W","^1@","^W","^1A","^W","^1B","^W","^1C","^W","^1D","^X","^1E","^W","^1F","^Z","^1G","^Y","^1H","^Z","^1I","^Y","^1J","^Z","^1K","^W","^1L","^W","^1M","^W"],"~:defs",["^ ","~$<aligned-body>",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",117,"^8",7,"^9",117,"^:",21,"^N",["^O",["~$quote",["^O",[["~$markups-lists"]]]]]],"^P","^48","^6","devtools/formatters/markup.cljs","^:",21,"~:method-params",["^O",[["^6S"]]],"~:protocol-impl",null,"~:arglists-meta",["^O",[null,null]],"^8",1,"~:variadic?",false,"^7",117,"~:ret-tag","~$cljs.core/IVector","^9",117,"~:max-fixed-arity",1,"~:fn-var",true,"^N",["^O",["^6R",["^O",[["^6S"]]]]]],"~$<native-reference>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",56,"^8",7,"^9",56,"^:",25,"^N",["^O",["^6R",["^O",[["~$object"]]]]]],"^P","^3W","^6","devtools/formatters/markup.cljs","^:",25,"^6T",["^O",[["^71"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",56,"^6X","^6Y","^9",56,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^71"]]]]]],"~$<reference-surrogate>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",50,"^8",7,"^9",50,"^:",28,"^N",["^O",["^6R",["^O",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^6W",true,"~:fixed-arity",0,"^6Z",0,"^6T",[["^O",["^73"]]],"^N",["^O",[["~$&","^73"]]],"^6V",["^O",[null]]]],"^P","^3Z","^6","devtools/formatters/markup.cljs","^:",28,"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^73"]]],"^N",["^O",[["~$&","^73"]]],"^6V",["^O",[null]]],"^6T",[["^O",["^73"]]],"^6U",null,"^75",0,"^6V",["^O",[null]],"^8",1,"^6W",true,"~:methods",[["^ ","^75",0,"^6W",true,"~:tag","~$cljs.core/LazySeq"]],"^7",50,"^6X","~$any","^9",50,"^6Z",0,"^6[",true,"^N",["^O",[["~$&","^73"]]]],"~$<keyword>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",75,"^8",7,"^9",75,"^:",16,"^N",["^O",["^6R",["^O",[["~$keyword"]]]]]],"^P","^3[","^6","devtools/formatters/markup.cljs","^:",16,"^6T",["^O",[["^7;"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",75,"^6X","^6Y","^9",75,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7;"]]]]]],"~$print-via-writer",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",28,"^8",7,"^9",28,"^:",23,"^N",["^O",["^6R",["^O",[["~$value","~$tag","~$&",["~$max-level"]]]]]],"^74",["^ ","^6W",true,"^75",2,"^6Z",2,"^6T",[["^O",["^7=","^7>",["^7?"]]]],"^N",["^O",[["^7=","^7>","~$&",["^7?"]]]],"^6V",["^O",[null]]]],"^P","^47","^6","devtools/formatters/markup.cljs","^:",23,"^74",["^ ","^6W",true,"^75",2,"^6Z",2,"^6T",[["^O",["^7=","^7>",["^7?"]]]],"^N",["^O",[["^7=","^7>","~$&",["^7?"]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^7=","^7>",["^7?"]]]],"^6U",null,"^75",2,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",2,"^6W",true,"^77",["^L",[null,"^79"]]]],"^7",28,"^6X","^79","^9",28,"^6Z",2,"^6[",true,"^N",["^O",[["^7=","^7>","~$&",["^7?"]]]]],"~$<protocol-method-arities>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",286,"^8",7,"^9",286,"^:",32,"^N",["^O",["^6R",["^O",[["~$fns","~$&",["~$max-fns"]]]]]],"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^7A",["^7B"]]]],"^N",["^O",[["^7A","~$&",["^7B"]]]],"^6V",["^O",[null]]]],"^P","^43","^6","devtools/formatters/markup.cljs","^:",32,"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^7A",["^7B"]]]],"^N",["^O",[["^7A","~$&",["^7B"]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^7A",["^7B"]]]],"^6U",null,"^75",1,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",1,"^6W",true,"^77","^78"]],"^7",286,"^6X","^79","^9",286,"^6Z",1,"^6[",true,"^N",["^O",[["^7A","~$&",["^7B"]]]]],"~$<surrogate-header>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",403,"^8",7,"^9",403,"^:",25,"^N",["^O",["^6R",["^O",[["~$surrogate"]]]]]],"^P","^30","^6","devtools/formatters/markup.cljs","^:",25,"^6T",["^O",[["^7D"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",403,"^6X",["^L",[null,"^79"]],"^9",403,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7D"]]]]]],"~$<details>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",169,"^8",7,"^9",169,"^:",16,"^N",["^O",["^6R",["^O",[["^7=","~$starting-index"]]]]]],"^P","^4<","^6","devtools/formatters/markup.cljs","^:",16,"^6T",["^O",[["^7=","^7F"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",169,"^6X","~$clj","^9",169,"^6Z",2,"^6[",true,"^N",["^O",["^6R",["^O",[["^7=","^7F"]]]]]],"~$<more-protocols>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",323,"^8",7,"^9",323,"^:",23,"^N",["^O",["^6R",["^O",[["~$more-count"]]]]]],"^P","^34","^6","devtools/formatters/markup.cljs","^:",23,"^6T",["^O",[["^7I"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",323,"^6X","^7G","^9",323,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7I"]]]]]],"~$<field>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",338,"^8",7,"^9",338,"^:",14,"^N",["^O",["^6R",["^O",[["~$name","^7="]]]]]],"^P","^4=","^6","devtools/formatters/markup.cljs","^:",14,"^6T",["^O",[["^7K","^7="]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",338,"^6X","^6Y","^9",338,"^6Z",2,"^6[",true,"^N",["^O",["^6R",["^O",[["^7K","^7="]]]]]],"~$<symbol>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",78,"^8",7,"^9",78,"^:",15,"^N",["^O",["^6R",["^O",[["~$symbol"]]]]]],"^P","^2V","^6","devtools/formatters/markup.cljs","^:",15,"^6T",["^O",[["^7M"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",78,"^6X","^6Y","^9",78,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7M"]]]]]],"~$<fields-details>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",368,"^8",7,"^9",368,"^:",23,"^N",["^O",["^6R",["^O",[["~$fields","~$obj"]]]]]],"^P","^2B","^6","devtools/formatters/markup.cljs","^:",23,"^6T",["^O",[["^7O","^7P"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",368,"^6X","^6Y","^9",368,"^6Z",2,"^6[",true,"^N",["^O",["^6R",["^O",[["^7O","^7P"]]]]]],"~$<atomic>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",422,"^8",7,"^9",422,"^:",15,"^N",["^O",["^6R",["^O",[["^7="]]]]]],"^P","^2@","^6","devtools/formatters/markup.cljs","^:",15,"^6T",["^O",[["^7="]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",422,"^6X",["^L",["^7G","^6Y","^78","~$clj-nil"]],"^9",422,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7="]]]]]],"~$<string>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",88,"^8",7,"^9",88,"^:",15,"^N",["^O",["^6R",["^O",[["~$string"]]]]]],"^P","^2>","^6","devtools/formatters/markup.cljs","^:",15,"^6T",["^O",[["^7T"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",88,"^6X","^7G","^9",88,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7T"]]]]]],"~$<standard-body>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",124,"^8",7,"^9",124,"^:",22,"^N",["^O",["^6R",["^O",[["^6S","~$&",["~$no-margin?"]]]]]],"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^6S",["^7V"]]]],"^N",["^O",[["^6S","~$&",["^7V"]]]],"^6V",["^O",[null]]]],"^P","^2I","^6","devtools/formatters/markup.cljs","^:",22,"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^6S",["^7V"]]]],"^N",["^O",[["^6S","~$&",["^7V"]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^6S",["^7V"]]]],"^6U",null,"^75",1,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",1,"^6W",true,"^77","^78"]],"^7",124,"^6X","^79","^9",124,"^6Z",1,"^6[",true,"^N",["^O",[["^6S","~$&",["^7V"]]]]],"~$<type-basis>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",253,"^8",7,"^9",253,"^:",19,"^N",["^O",["^6R",["^O",[["~$basis"]]]]]],"^P","^2G","^6","devtools/formatters/markup.cljs","^:",19,"^6T",["^O",[["^7X"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",253,"^6X","^78","^9",253,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7X"]]]]]],"~$*markup-db*",["^ ","^5",["^ ","^6","devtools/formatters/markup.cljs","^7",436,"^8",16,"^9",436,"^:",27,"~:dynamic",true],"^P","^35","^6","devtools/formatters/markup.cljs","^:",27,"^8",1,"^7Z",true,"^7",436,"^9",436,"^77","^79"],"~$print-via-protocol",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",31,"^8",7,"^9",31,"^:",25,"^N",["^O",["^6R",["^O",[["^7=","^7>","~$&",["^7?"]]]]]],"^74",["^ ","^6W",true,"^75",2,"^6Z",2,"^6T",[["^O",["^7=","^7>",["^7?"]]]],"^N",["^O",[["^7=","^7>","~$&",["^7?"]]]],"^6V",["^O",[null]]]],"^P","^3G","^6","devtools/formatters/markup.cljs","^:",25,"^74",["^ ","^6W",true,"^75",2,"^6Z",2,"^6T",[["^O",["^7=","^7>",["^7?"]]]],"^N",["^O",[["^7=","^7>","~$&",["^7?"]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^7=","^7>",["^7?"]]]],"^6U",null,"^75",2,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",2,"^6W",true,"^77",["^L",[null,"^79"]]]],"^7",31,"^6X","^79","^9",31,"^6Z",2,"^6[",true,"^N",["^O",[["^7=","^7>","~$&",["^7?"]]]]],"~$print-with",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",21,"^8",7,"^9",21,"^:",17,"^N",["^O",["^6R",["^O",[["~$method","^7=","^7>","~$&",["^7?"]]]]]],"^74",["^ ","^6W",true,"^75",3,"^6Z",3,"^6T",[["^O",["^81","^7=","^7>",["^7?"]]]],"^N",["^O",[["^81","^7=","^7>","~$&",["^7?"]]]],"^6V",["^O",[null]]]],"^P","^3E","^6","devtools/formatters/markup.cljs","^:",17,"^74",["^ ","^6W",true,"^75",3,"^6Z",3,"^6T",[["^O",["^81","^7=","^7>",["^7?"]]]],"^N",["^O",[["^81","^7=","^7>","~$&",["^7?"]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^81","^7=","^7>",["^7?"]]]],"^6U",null,"^75",3,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",3,"^6W",true,"^77",["^L",[null,"^79"]]]],"^7",21,"^6X","^79","^9",21,"^6Z",3,"^6[",true,"^N",["^O",[["^81","^7=","^7>","~$&",["^7?"]]]]],"~$<bool>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",72,"^8",7,"^9",72,"^:",13,"^N",["^O",["^6R",["^O",[["~$bool"]]]]]],"^P","^3D","^6","devtools/formatters/markup.cljs","^:",13,"^6T",["^O",[["^83"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",72,"^6X","^6Y","^9",72,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^83"]]]]]],"~$<standalone-type>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",275,"^8",7,"^9",275,"^:",24,"^N",["^O",["^6R",["^O",[["~$constructor-fn","~$&",["~$header-tag"]]]]]],"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^85",["^86"]]]],"^N",["^O",[["^85","~$&",["^86"]]]],"^6V",["^O",[null]]]],"^P","^2;","^6","devtools/formatters/markup.cljs","^:",24,"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^85",["^86"]]]],"^N",["^O",[["^85","~$&",["^86"]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^85",["^86"]]]],"^6U",null,"^75",1,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",1,"^6W",true,"^77","^6Y"]],"^7",275,"^6X","^79","^9",275,"^6Z",1,"^6[",true,"^N",["^O",[["^85","~$&",["^86"]]]]],"~$<preview>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",109,"^8",7,"^9",109,"^:",16,"^N",["^O",["^6R",["^O",[["^7="]]]]]],"^P","^2P","^6","devtools/formatters/markup.cljs","^:",16,"^6T",["^O",[["^7="]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",109,"^6X",["^L",[null,"^79"]],"^9",109,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7="]]]]]],"~$<header>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",400,"^8",7,"^9",400,"^:",15,"^N",["^O",["^6R",["^O",[["^7="]]]]]],"^P","^3L","^6","devtools/formatters/markup.cljs","^:",15,"^6T",["^O",[["^7="]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",400,"^6X","^78","^9",400,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7="]]]]]],"~$<protocol-method>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",299,"^8",7,"^9",299,"^:",24,"^N",["^O",["^6R",["^O",[["^7K","~$arities"]]]]]],"^P","^3M","^6","devtools/formatters/markup.cljs","^:",24,"^6T",["^O",[["^7K","^8:"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",299,"^6X","^6Y","^9",299,"^6Z",2,"^6[",true,"^N",["^O",["^6R",["^O",[["^7K","^8:"]]]]]],"~$<cljs-land>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",65,"^8",7,"^9",65,"^:",18,"^N",["^O",["^6R",["^O",[["~$&","~$children"]]]]],"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^8<"]]],"^N",["^O",[["~$&","^8<"]]],"^6V",["^O",[null]]]],"^P","^27","^6","devtools/formatters/markup.cljs","^:",18,"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^8<"]]],"^N",["^O",[["~$&","^8<"]]],"^6V",["^O",[null]]],"^6T",[["^O",["^8<"]]],"^6U",null,"^75",0,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",0,"^6W",true,"^77","^78"]],"^7",65,"^6X","^79","^9",65,"^6Z",0,"^6[",true,"^N",["^O",[["~$&","^8<"]]]],"~$<type-basis-item>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",250,"^8",7,"^9",250,"^:",24,"^N",["^O",["^6R",["^O",[["~$basis-item"]]]]]],"^P","^26","^6","devtools/formatters/markup.cljs","^:",24,"^6T",["^O",[["^8>"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",250,"^6X","^6Y","^9",250,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^8>"]]]]]],"~$<protocol-method-arities-details>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",283,"^8",7,"^9",283,"^:",40,"^N",["^O",["^6R",["^O",[["^7A"]]]]]],"^P","^2W","^6","devtools/formatters/markup.cljs","^:",40,"^6T",["^O",[["^7A"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",283,"^6X","^6Y","^9",283,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7A"]]]]]],"~$<fields-details-row>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",345,"^8",7,"^9",345,"^:",27,"^N",["^O",["^6R",["^O",[["~$field"]]]]]],"^P","^2H","^6","devtools/formatters/markup.cljs","^:",27,"^6T",["^O",[["^8A"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",345,"^6X","^6Y","^9",345,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^8A"]]]]]],"~$<standard-body-reference>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",133,"^8",7,"^9",133,"^:",32,"^N",["^O",["^6R",["^O",[["~$o"]]]]]],"^P","^2X","^6","devtools/formatters/markup.cljs","^:",32,"^6T",["^O",[["~$o"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",133,"^6X","^78","^9",133,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["~$o"]]]]]],"~$<surrogate-body>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",414,"^8",7,"^9",414,"^:",23,"^N",["^O",["^6R",["^O",[["^7D"]]]]]],"^P","^2C","^6","devtools/formatters/markup.cljs","^:",23,"^6T",["^O",[["^7D"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",414,"^6X",["^L",["^7G","^79","^7R"]],"^9",414,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7D"]]]]]],"~$get-markup-db",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",448,"^8",7,"^9",448,"^:",20,"^N",["^O",["^6R",["^O",[[]]]]]],"^P","^2T","^6","devtools/formatters/markup.cljs","^:",20,"^6T",["^O",[[]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",448,"^6X","^79","^9",448,"^6Z",0,"^6[",true,"^N",["^O",["^6R",["^O",[[]]]]]],"~$<expandable>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",36,"^8",7,"^9",36,"^:",19,"^N",["^O",["^6R",["^O",[["~$&","^8<"]]]]],"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^8<"]]],"^N",["^O",[["~$&","^8<"]]],"^6V",["^O",[null]]]],"^P","^3N","^6","devtools/formatters/markup.cljs","^:",19,"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^8<"]]],"^N",["^O",[["~$&","^8<"]]],"^6V",["^O",[null]]],"^6T",[["^O",["^8<"]]],"^6U",null,"^75",0,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",0,"^6W",true,"^77","^6Y"]],"^7",36,"^6X","^79","^9",36,"^6Z",0,"^6[",true,"^N",["^O",[["~$&","^8<"]]]],"~$<type>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",266,"^8",7,"^9",266,"^:",13,"^N",["^O",["^6R",["^O",[["^85","~$&",["^86"]]]]]],"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^85",["^86"]]]],"^N",["^O",[["^85","~$&",["^86"]]]],"^6V",["^O",[null]]]],"^P","^2[","^6","devtools/formatters/markup.cljs","^:",13,"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^85",["^86"]]]],"^N",["^O",[["^85","~$&",["^86"]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^85",["^86"]]]],"^6U",null,"^75",1,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",1,"^6W",true,"^77","^6Y"]],"^7",266,"^6X","^79","^9",266,"^6Z",1,"^6[",true,"^N",["^O",[["^85","~$&",["^86"]]]]],"~$<protocol-method-arity>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",280,"^8",7,"^9",280,"^:",30,"^N",["^O",["^6R",["^O",[["~$arity-fn"]]]]]],"^P","^2Z","^6","devtools/formatters/markup.cljs","^:",30,"^6T",["^O",[["^8H"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",280,"^6X","^78","^9",280,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^8H"]]]]]],"~$<raw-surrogate>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",40,"^8",7,"^9",40,"^:",22,"^N",["^O",["^6R",["^O",[["~$&","^73"]]]]],"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^73"]]],"^N",["^O",[["~$&","^73"]]],"^6V",["^O",[null]]]],"^P","^44","^6","devtools/formatters/markup.cljs","^:",22,"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^73"]]],"^N",["^O",[["~$&","^73"]]],"^6V",["^O",[null]]],"^6T",[["^O",["^73"]]],"^6U",null,"^75",0,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",0,"^6W",true,"^77","^78"]],"^7",40,"^6X","^79","^9",40,"^6Z",0,"^6[",true,"^N",["^O",[["~$&","^73"]]]],"~$<type-details>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",258,"^8",7,"^9",258,"^:",21,"^N",["^O",["^6R",["^O",[["^85","^1O","~$_name","^7X"]]]]]],"^P","^2Y","^6","devtools/formatters/markup.cljs","^:",21,"^6T",["^O",[["^85","^1O","^8K","^7X"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",258,"^6X","^6Y","^9",258,"^6Z",4,"^6[",true,"^N",["^O",["^6R",["^O",[["^85","^1O","^8K","^7X"]]]]]],"~$<list>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",181,"^8",7,"^9",181,"^:",13,"^N",["^O",["^6R",["^O",[["~$items","~$max-count","~$&",["~$opts"]]]]]],"^74",["^ ","^6W",true,"^75",2,"^6Z",2,"^6T",[["^O",["^8M","^8N",["^8O"]]]],"^N",["^O",[["^8M","^8N","~$&",["^8O"]]]],"^6V",["^O",[null]]]],"^P","^40","^6","devtools/formatters/markup.cljs","^:",13,"^74",["^ ","^6W",true,"^75",2,"^6Z",2,"^6T",[["^O",["^8M","^8N",["^8O"]]]],"^N",["^O",[["^8M","^8N","~$&",["^8O"]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^8M","^8N",["^8O"]]]],"^6U",null,"^75",2,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",2,"^6W",true,"^77","^78"]],"^7",181,"^6X","^79","^9",181,"^6Z",2,"^6[",true,"^N",["^O",[["^8M","^8N","~$&",["^8O"]]]]],"~$<meta-wrapper>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",210,"^8",7,"^9",210,"^:",21,"^N",["^O",["^6R",["^O",[["~$metadata","~$&","^8<"]]]]],"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^8Q","^8<"]]],"^N",["^O",[["^8Q","~$&","^8<"]]],"^6V",["^O",[null]]]],"^P","^41","^6","devtools/formatters/markup.cljs","^:",21,"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^8Q","^8<"]]],"^N",["^O",[["^8Q","~$&","^8<"]]],"^6V",["^O",[null]]],"^6T",[["^O",["^8Q","^8<"]]],"^6U",null,"^75",1,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",1,"^6W",true,"^77","^78"]],"^7",210,"^6X","^79","^9",210,"^6Z",1,"^6[",true,"^N",["^O",[["^8Q","~$&","^8<"]]]],"~$<protocol>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",314,"^8",7,"^9",314,"^:",17,"^N",["^O",["^6R",["^O",[["^7P","~$protocol","~$&",["^7>"]]]]]],"^74",["^ ","^6W",true,"^75",2,"^6Z",2,"^6T",[["^O",["^7P","^8S",["^7>"]]]],"^N",["^O",[["^7P","^8S","~$&",["^7>"]]]],"^6V",["^O",[null]]]],"^P","^3:","^6","devtools/formatters/markup.cljs","^:",17,"^74",["^ ","^6W",true,"^75",2,"^6Z",2,"^6T",[["^O",["^7P","^8S",["^7>"]]]],"^N",["^O",[["^7P","^8S","~$&",["^7>"]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^7P","^8S",["^7>"]]]],"^6U",null,"^75",2,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",2,"^6W",true,"^77","^7G"]],"^7",314,"^6X","^79","^9",314,"^6Z",2,"^6[",true,"^N",["^O",[["^7P","^8S","~$&",["^7>"]]]]],"~$<index>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",138,"^8",7,"^9",138,"^:",14,"^N",["^O",["^6R",["^O",[["^7="]]]]]],"^P","^38","^6","devtools/formatters/markup.cljs","^:",14,"^6T",["^O",[["^7="]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",138,"^6X","^6Y","^9",138,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7="]]]]]],"~$<surrogate>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",43,"^8",7,"^9",43,"^:",18,"^N",["^O",["^6R",["^O",[["~$&",["^71","~$header","~$body","~$start-index"]]]]]],"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",[["^71","^8V","^8W","^8X"]]]],"^N",["^O",[["~$&",["^71","^8V","^8W","^8X"]]]],"^6V",["^O",[null]]]],"^P","^2R","^6","devtools/formatters/markup.cljs","^:",18,"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",[["^71","^8V","^8W","^8X"]]]],"^N",["^O",[["~$&",["^71","^8V","^8W","^8X"]]]],"^6V",["^O",[null]]],"^6T",[["^O",[["^71","^8V","^8W","^8X"]]]],"^6U",null,"^75",0,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",0,"^6W",true,"^77","^78"]],"^7",43,"^6X","^79","^9",43,"^6Z",0,"^6[",true,"^N",["^O",[["~$&",["^71","^8V","^8W","^8X"]]]]],"~$<protocols-list>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",327,"^8",7,"^9",327,"^:",23,"^N",["^O",["^6R",["^O",[["^7P","~$protocols","~$&",["~$max-protocols"]]]]]],"^74",["^ ","^6W",true,"^75",2,"^6Z",2,"^6T",[["^O",["^7P","^8Z",["^8["]]]],"^N",["^O",[["^7P","^8Z","~$&",["^8["]]]],"^6V",["^O",[null]]]],"^P","^36","^6","devtools/formatters/markup.cljs","^:",23,"^74",["^ ","^6W",true,"^75",2,"^6Z",2,"^6T",[["^O",["^7P","^8Z",["^8["]]]],"^N",["^O",[["^7P","^8Z","~$&",["^8["]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^7P","^8Z",["^8["]]]],"^6U",null,"^75",2,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",2,"^6W",true,"^77","^78"]],"^7",327,"^6X","^79","^9",327,"^6Z",2,"^6[",true,"^N",["^O",[["^7P","^8Z","~$&",["^8["]]]]],"~$<meta>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",205,"^8",7,"^9",205,"^:",13,"^N",["^O",["^6R",["^O",[["^8Q"]]]]]],"^P","^3>","^6","devtools/formatters/markup.cljs","^:",13,"^6T",["^O",[["^8Q"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",205,"^6X","^6Y","^9",205,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^8Q"]]]]]],"~$<instance>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",379,"^8",7,"^9",379,"^:",17,"^N",["^O",["^6R",["^O",[["^7="]]]]]],"^P","^3<","^6","devtools/formatters/markup.cljs","^:",17,"^6T",["^O",[["^7="]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",379,"^6X","^6Y","^9",379,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7="]]]]]],"~$<reference>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",47,"^8",7,"^9",47,"^:",18,"^N",["^O",["^6R",["^O",[["~$&","^73"]]]]],"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^73"]]],"^N",["^O",[["~$&","^73"]]],"^6V",["^O",[null]]]],"^P","^3A","^6","devtools/formatters/markup.cljs","^:",18,"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^73"]]],"^N",["^O",[["~$&","^73"]]],"^6V",["^O",[null]]],"^6T",[["^O",["^73"]]],"^6U",null,"^75",0,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",0,"^6W",true,"^77","^78"]],"^7",47,"^6X","^79","^9",47,"^6Z",0,"^6[",true,"^N",["^O",[["~$&","^73"]]]],"~$<function-details>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",215,"^8",7,"^9",215,"^:",25,"^N",["^O",["^6R",["^O",[["~$fn-obj","^1O","^8K","^8:","~$prefix"]]]]]],"^P","^3C","^6","devtools/formatters/markup.cljs","^:",25,"^6T",["^O",[["^94","^1O","^8K","^8:","^95"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",215,"^6X","^6Y","^9",215,"^6Z",5,"^6[",true,"^N",["^O",["^6R",["^O",[["^94","^1O","^8K","^8:","^95"]]]]]],"~$<function>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",232,"^8",7,"^9",232,"^:",17,"^N",["^O",["^6R",["^O",[["^94"]]]]]],"^P","^3I","^6","devtools/formatters/markup.cljs","^:",17,"^6T",["^O",[["^94"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",232,"^6X","^78","^9",232,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^94"]]]]]],"~$<arities>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",226,"^8",7,"^9",226,"^:",16,"^N",["^O",["^6R",["^O",[["^8:"]]]]]],"^P","^2J","^6","devtools/formatters/markup.cljs","^:",16,"^6T",["^O",[["^8:"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",226,"^6X","^6Y","^9",226,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^8:"]]]]]],"~$<header-expander>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",60,"^8",7,"^9",60,"^:",24,"^N",["^O",["^6R",["^O",[["^71"]]]]]],"^P","^2D","^6","devtools/formatters/markup.cljs","^:",24,"^6T",["^O",[["^71"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",60,"^6X","^78","^9",60,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^71"]]]]]],"~$<list-details>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",178,"^8",7,"^9",178,"^:",21,"^N",["^O",["^6R",["^O",[["^8M","~$_opts"]]]]]],"^P","^45","^6","devtools/formatters/markup.cljs","^:",21,"^6T",["^O",[["^8M","^9:"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",178,"^6X","^6Y","^9",178,"^6Z",2,"^6[",true,"^N",["^O",["^6R",["^O",[["^8M","^9:"]]]]]],"~$<circular-reference>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",53,"^8",7,"^9",53,"^:",27,"^N",["^O",["^6R",["^O",[["~$&","^8<"]]]]],"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^8<"]]],"^N",["^O",[["~$&","^8<"]]],"^6V",["^O",[null]]]],"^P","^3K","^6","devtools/formatters/markup.cljs","^:",27,"^74",["^ ","^6W",true,"^75",0,"^6Z",0,"^6T",[["^O",["^8<"]]],"^N",["^O",[["~$&","^8<"]]],"^6V",["^O",[null]]],"^6T",[["^O",["^8<"]]],"^6U",null,"^75",0,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",0,"^6W",true,"^77","^78"]],"^7",53,"^6X","^79","^9",53,"^6Z",0,"^6[",true,"^N",["^O",[["~$&","^8<"]]]],"~$<surrogate-target>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",407,"^8",7,"^9",407,"^:",25,"^N",["^O",["^6R",["^O",[["^7D"]]]]]],"^P","^3R","^6","devtools/formatters/markup.cljs","^:",25,"^6T",["^O",[["^7D"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",407,"^6X","^7G","^9",407,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^7D"]]]]]],"~$body-line",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",141,"^8",8,"^9",141,"^:",17,"~:private",true,"^N",["^O",["^6R",["^O",[["~$index","^7="]]]]]],"^9>",true,"^P","^2A","^6","devtools/formatters/markup.cljs","^:",17,"^6T",["^O",[["^9?","^7="]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",141,"^6X","^6Y","^9",141,"^6Z",2,"^6[",true,"^N",["^O",["^6R",["^O",[["^9?","^7="]]]]]],"~$body-lines",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",155,"^8",8,"^9",155,"^:",18,"^9>",true,"^N",["^O",["^6R",["^O",[["^7=","^7F"]]]]]],"^9>",true,"^P","^2?","^6","devtools/formatters/markup.cljs","^:",18,"^6T",["^O",[["^7=","^7F"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",155,"^6X",["^L",["^7G","^6Y"]],"^9",155,"^6Z",2,"^6[",true,"^N",["^O",["^6R",["^O",[["^7=","^7F"]]]]]],"~$<fields>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",356,"^8",7,"^9",356,"^:",15,"^N",["^O",["^6R",["^O",[["^7O","~$&",["~$max-fields"]]]]]],"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^7O",["^9B"]]]],"^N",["^O",[["^7O","~$&",["^9B"]]]],"^6V",["^O",[null]]]],"^P","^3P","^6","devtools/formatters/markup.cljs","^:",15,"^74",["^ ","^6W",true,"^75",1,"^6Z",1,"^6T",[["^O",["^7O",["^9B"]]]],"^N",["^O",[["^7O","~$&",["^9B"]]]],"^6V",["^O",[null]]],"^6T",[["^O",["^7O",["^9B"]]]],"^6U",null,"^75",1,"^6V",["^O",[null]],"^8",1,"^6W",true,"^76",[["^ ","^75",1,"^6W",true,"^77","^7G"]],"^7",356,"^6X","^79","^9",356,"^6Z",1,"^6[",true,"^N",["^O",[["^7O","~$&",["^9B"]]]]],"~$<nil>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",68,"^8",7,"^9",68,"^:",12,"^N",["^O",["^6R",["^O",[[]]]]]],"^P","^3J","^6","devtools/formatters/markup.cljs","^:",12,"^6T",["^O",[[]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",68,"^6X","^6Y","^9",68,"^6Z",0,"^6[",true,"^N",["^O",["^6R",["^O",[[]]]]]],"~$<body>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",114,"^8",7,"^9",114,"^:",13,"^N",["^O",["^6R",["^O",[["~$markup"]]]]]],"^P","^3O","^6","devtools/formatters/markup.cljs","^:",13,"^6T",["^O",[["^9E"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",114,"^6X","^6Y","^9",114,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^9E"]]]]]],"~$<number>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",81,"^8",7,"^9",81,"^:",15,"^N",["^O",["^6R",["^O",[["~$number"]]]]]],"^P","^3Y","^6","devtools/formatters/markup.cljs","^:",15,"^6T",["^O",[["^9G"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",81,"^6X","^6Y","^9",81,"^6Z",1,"^6[",true,"^N",["^O",["^6R",["^O",[["^9G"]]]]]],"~$<protocol-details>",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",305,"^8",7,"^9",305,"^:",25,"^N",["^O",["^6R",["^O",[["^7P","^1O","^8K","~$selector","~$_fast?"]]]]]],"^P","^3V","^6","devtools/formatters/markup.cljs","^:",25,"^6T",["^O",[["^7P","^1O","^8K","^9I","^9J"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",305,"^6X","^6Y","^9",305,"^6Z",5,"^6[",true,"^N",["^O",["^6R",["^O",[["^7P","^1O","^8K","^9I","^9J"]]]]]],"~$prepare-body-lines",["^ ","^6Q",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",147,"^8",8,"^9",147,"^:",26,"^9>",true,"^N",["^O",["^6R",["^O",[["~$data","^7F"]]]]]],"^9>",true,"^P","^3S","^6","devtools/formatters/markup.cljs","^:",26,"^6T",["^O",[["^9L","^7F"]]],"^6U",null,"^6V",["^O",[null,null]],"^8",1,"^6W",false,"^7",147,"^6X",["^L",["^7G","^6Y"]],"^9",147,"^6Z",2,"^6[",true,"^N",["^O",["^6R",["^O",[["^9L","^7F"]]]]]]],"^15",["^ ","^J","^J","^11","^11","^[","^[","^10","^["],"~:cljs.analyzer/constants",["^ ","^13",["^L",["~:protocol-method-arities-header-close-symbol","~:protocol-details","~:max-number-body-items","~:meta-reference-tag","~:instance-custom-printing-tag","~:type-header-background","~:body-field-symbol","~:body-items-more-tag","~:line-index-separator","~:new-line-string-replacer","~:selector","~:more-fields-symbol","~:body-field-value-spacer","~:standard-body","~:protocol-background","~:protocols-icon","~:standalone-type","~:standard-ol-no-margin-tag","~:symbol-tag","~:render-keywords","~:fn-header-tag","~:keyword-tag","~:protocol-method-arities","~:surrogate","~:fields-header-tag","^5","~:aligned-body","~:body-items-more-label","~:nil-tag","~:index","~:instance","~:float-tag","~:protocol-ns-name-tag","~:protocol-method","~:protocol-method-arities-details","~:protocol-method-arities-more-symbol","~:number","~:index-tag","~:rest-symbol","~:protocol","~:protocols-list-close-symbol","~:protocol-name-tag","~:protocol-method-arity","~:more-protocols","~:instance-header-background","~:body-tag","~:cljs-land-tag","~:max-list-protocols","~:string-abbreviation-marker","~:native-icon","~:instance-body-fields-table-tag","~:render-symbols","^R","~:symbol","~:fields-details-row","^P","~:type-name-tag","~:list-separator","~:header-field-value-spacer","~:fast-protocol-tag","~:render-strings","~:standalone-type-tag","~:type-header-tag","~:lambda-icon","~:render-functions","~:fields-header-open-symbol","~:fields","~:type-details","~:fn-name-tag","~:protocols-list","~:header-field-value-tag","~:fields-icon","~:type-wrapper-tag","~:field","~:type","~:standard-li-tag","~:type-basis-item","~:render-bools","~:dq","~:fields-header-no-fields-symbol","~:nil-label","~:meta-wrapper","~:protocols-list-open-symbol","~:list-open-symbol","~:raw-surrogate","~:header-field-separator","~:function-details","~:body-field-td3-tag","~:string","~:surrogate-header","~:more-symbol","~:native-reference","~:header","~:string-tag","~:meta-wrapper-tag","~:method-icon","~:function","~:max-protocol-method-arities-list","~:reference-surrogate","~:header-protocol-separator","~:basis-icon","~:surrogate-body","~:fn-args-tag","~:bool-tag","~:expandable-inner-tag","~:fn-prefix-tag","~:type-basis-item-tag","~:fn-ns-name-tag","~:header-tag","~:body-field-name-tag","~:open-symbol","~:protocol-method-arities-header-open-symbol","~:expanded-string-tag","~:protocol-more-tag","~:reference","~:meta-body-tag","~:instance-custom-printing-background","~:preview","~:fast?","~:native-reference-background","~:details","~:instance-type-header-tag","~:list","~:keyword","~:spacer","~:body-field-tr-tag","~:surrogate-target","~:header-field-name-tag","~:standard-li-no-margin-tag","~:list-tag","~:body-field-td1-tag","~:nil","~:render-types","~:string-postfix-limit","~:protocol-method-arities-list-header-separator","~:protocol-method-tag","~:fields-details","~:list-close-symbol","~:render-numbers","~:circular-reference","~:expandable","~:body-field-value-tag","~:empty-basis-symbol","~:list-details","~:fn-icon","~:integer-tag","~:type-basis-item-separator","~:protocols-header-tag","~:protocol-method-name-tag","~:item-tag","~:instance-value-tag","~:circular-ref-icon","~:standard-ol-tag","~:standard-body-reference","^77","~:circular-reference-body-tag","~:bool","~:native-reference-tag","~:target","~:type-basis","~:aligned-li-tag","~:render-instances","~:expandable-symbol","~:fn-multi-arity-args-indent-tag","~:expandable-tag","~:protocol-method-arities-header-tag","~:max-instance-header-fields","~:arities","~:type-ref-tag","~:max-print-level","~:multi-arity-symbol","~:render-nils","~:meta-header-tag","~:body","~:separator","~:slow-protocol-tag","~:header-field-tag","~:native-reference-wrapper-tag","~:fields-header-close-symbol","~:string-prefix-limit","~:instance-custom-printing-wrapper-tag","~:body-field-td2-tag","~:atomic","~:type-basis-tag","~:close-symbol","~:type-symbol","~:instance-header-tag","~:header-expander","~:ns-icon","~:body-line-max-print-level","~:circular-reference-tag","~:header-expander-symbol","~:cljs-land"]],"~:order~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^4?",[["^>2","~:static-fns"],true,["^>2","~:shadow-tweaks"],null,["^>2","~:source-map-inline"],null,["^>2","~:elide-asserts"],false,["^>2","~:optimize-constants"],null,["^>2","^1Y"],null,["^>2","~:external-config"],null,["^>2","~:tooling-config"],null,["^>2","~:emit-constants"],null,["^>2","~:load-tests"],null,["^>2","~:form-size-threshold"],null,["^>2","~:data-readers"],null,["^>2","~:infer-externs"],"~:auto",["^>2","^1["],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^>2","~:fn-invoke-direct"],null,["^>2","~:source-map"],"/dev/null"]]]